import React, { useState, useEffect } from "react";
import {
  MapContainer,
  TileLayer,
  Marker,
  Popup,
  Polygon,
  Polyline,
  useMap,
} from "react-leaflet";
import "leaflet/dist/leaflet.css";
import L from "leaflet";
import "./App.css";

import Chatbot from "react-chatbot-kit";
import "react-chatbot-kit/build/main.css";
import config from "./chatbot/config";
import MessageParser from "./chatbot/MessageParser";
import ActionProvider from "./chatbot/ActionProvider";
import { MessageCircle, X } from "react-feather";

const predefinedRoutes = {
  "main_gate-canteen": [
    [12.967480941993218, 77.71392045940188],
    [12.966891958593855, 77.7119835801769],
    [12.967040729829373, 77.71193014769703],
    [12.966949716809521, 77.71166465298649],
    [12.96684140330842, 77.71168479618125],
    [12.966765671194379, 77.71145255757102],
  ],
  "main_gate-playground": [
    [12.967480941993218, 77.71392045940188],
    [12.966891958593855, 77.7119835801769],
    [12.967040729829373, 77.71193014769703],
    [12.966949716809521, 77.71166465298649],
    [12.96670140330842, 77.71173879618125],
    [12.966413070096815, 77.71166829211994],
  ],
  "main_gate-basketball": [
    [12.967480941993218, 77.71392045940188],
    [12.966891958593855, 77.7119835801769],
    [12.967040729829373, 77.71193014769703],
    [12.966818778907774, 77.71146109553008],
  ],
  "main_gate-volleyball": [
    [12.967480941993218, 77.71392045940188],
    [12.966891958593855, 77.7119835801769],
    [12.96690527702099, 77.71178140750145],
  ],
  "main_gate-hostel": [
    [12.967480941993218, 77.71392045940188],
    [12.966891958593855, 77.7119835801769],
    [12.967120724566939, 77.71185593733031],
    [12.966947750021633, 77.71110921611905],
    [12.966840440716511, 77.71114082111771],
    [12.966803061189433, 77.7109744052715],
  ],
  "main_gate-ablock": [
    [12.967480941993218, 77.71392045940188],
    [12.966891958593855, 77.7119335801769],
    [12.966316844515454, 77.71211080935157],
    [12.96634566829672, 77.71220666054872],
  ], "main_gate-bblock": [
    [12.967480941993218, 77.71392045940188],
    [12.966891958593855, 77.7119335801769],
    [12.96626086511384, 77.71211413510984],
    [12.966160203809272, 77.71188712712463],
    [12.965973231910628, 77.71191965963331],
  ], "main_gate-cblock": [
    [12.967480941993218, 77.71392045940188],
    [12.966891958593855, 77.7119335801769],
    [12.96623086511384, 77.71211413510984],
    [12.96601492864516, 77.7115120561032],
    [12.965856347559777, 77.71154009644013],
  ],
  "main_gate-dblock": [
    [12.967480941993218, 77.71392045940188],
    [12.966891958593855, 77.7119835801769],
    [12.967040729829373, 77.71193014769703],
    [12.966949716809521, 77.71166465298649],
    [12.96670140330842, 77.71173879618125],
    [12.966516285539356, 77.71110310076793],
  ],
  "canteen-main_gate": [
    [12.966765671194379, 77.71145255757102],
    [12.96683140330842, 77.71168479618125],
    [12.966928216809521, 77.71165465298649],
    [12.967040729829373, 77.71188014769703],
    [12.966891958593855, 77.7119335801769],
    [12.967480941993218, 77.71392045940188],
  ],
  "canteen-playground": [
    [12.966765671194379, 77.71145255757102],
    [12.966791930658627, 77.71155266948952],
    [12.966413070096815, 77.71166829211994],
  ],
  "canteen-basketball": [
    [12.966765671194379, 77.71145255757102],
    [12.966818778907774, 77.71146109553008],
  ],
  "canteen-volleyball": [
    [12.966765671194379, 77.71145255757102],
    [12.96690527702099, 77.71178140750145],
  ],
  "canteen-hostel": [
    [12.966765671194379, 77.71145255757102],
    [12.966657151889198, 77.711207760465],
    [12.966850751906482, 77.71114350623426],
    [12.966803061189433, 77.7109744052715],
  ],
  "canteen-ablock": [
    [12.966765671194379, 77.71145255757102],
    [12.966657151889198, 77.711207760465],
    [12.966002288303713, 77.7114446798303],
    [12.96634566829672, 77.71220666054872],
  ],
  "canteen-bblock": [
    [12.966765671194379, 77.71145255757102],
    [12.966657151889198, 77.711207760465],
    [12.965982288303713, 77.7114446798303],
    [12.966136263292751, 77.71190177496305],
    [12.965973231910628, 77.71191965963331],
  ],
  "canteen-cblock": [
    [12.966765671194379, 77.71145255757102],
    [12.966657151889198, 77.711207760465],
    [12.965856347559777, 77.71154009644013],
  ],
  "canteen-dblock": [
    [12.966765671194379, 77.71145255757102],
    [12.966516285539356, 77.71110310076793],
  ],
  "playground-main_gate": [
    [12.966413070096815, 77.71166829211994],
    [12.96670140330842, 77.71173879618125],
    [12.966949716809521, 77.71166465298649],
    [12.967040729829373, 77.71193014769703],
    [12.966891958593855, 77.7119835801769],
    [12.967480941993218, 77.71392045940188],
  ],
  "playground-canteen": [
    [12.966413070096815, 77.71166829211994],
    [12.966791930658627, 77.71155266948952],
    [12.966765671194379, 77.71145255757102],
  ],
  "playground-basketball": [
    [12.966413070096815, 77.71166829211994],
    [12.966818778907774, 77.71146109553008],
  ],
  "playground-volleyball": [
    [12.966413070096815, 77.71166829211994],
    [12.96680140330842, 77.71154879618125],
    [12.96690527702099, 77.71178140750145],
  ],
  "playground-hostel": [
    [12.966413070096815, 77.71166829211994],
    [12.96680140330842, 77.71154879618125],
    [12.966638279544366, 77.71120163718068],
    [12.966840440716511, 77.71114082111771],
    [12.966803061189433, 77.7109744052715],
  ],
  "playground-ablock": [
    [12.966413070096815, 77.71166829211994],
    [12.966791930658627, 77.71155266948952],
    [12.96684140330842, 77.71168479618125],
    [12.966949716809521, 77.71166465298649],
    [12.967010729829373, 77.71191014769703],
    [12.966316844515454, 77.71211080935157],
    [12.96634566829672, 77.71220666054872],
  ],
  "playground-bblock": [
    [12.966413070096815, 77.71166829211994],
    [12.96680140330842, 77.71154879618125],
    [12.966657151889198, 77.711207760465],
    [12.965982288303713, 77.7114446798303],
    [12.966136263292751, 77.71190177496305],
    [12.965973231910628, 77.71191965963331],
  ],
  "playground-cblock": [
    [12.966413070096815, 77.71166829211994],
    [12.96680140330842, 77.71154879618125],
    [12.966657151889198, 77.711207760465],
    [12.965856347559777, 77.71154009644013],
  ],
  "playground-dblock": [
    [12.966413070096815, 77.71166829211994],
    [12.96680140330842, 77.71154879618125],
    [12.966638279544366, 77.71120163718068],
    [12.966538279544366, 77.71123163718068],
    [12.966516285539356, 77.71110310076793],
  ],
  "basketball-main gate": [
    [12.966818778907774, 77.71146109553008],
    [12.967040729829373, 77.71193014769703],
    [12.966891958593855, 77.7119835801769],
    [12.967480941993218, 77.71392045940188],
  ],
  "basketball-canteen": [
    [12.966818778907774, 77.71146109553008],
    [12.966791930658627, 77.71150266948952],
    [12.966765671194379, 77.71145255757102],
  ],
  "basketball-playground": [
    [12.966818778907774, 77.71146109553008],
    [12.966413070096815, 77.71166829211994],
  ],
  "basketball-volleyballcourt": [
    [12.966818778907774, 77.71146109553008],
    [12.96680140330842, 77.71146879618125],
    [12.96690527702099, 77.71178140750145],
  ],
  "basketball-hostel": [
    [12.966818778907774, 77.71146109553008],
    [12.966638279544366, 77.71120163718068],
    [12.966840440716511, 77.71114082111771],
    [12.966803061189433, 77.7109744052715],
  ],
  "basketball-ablock": [
    [12.966818778907774, 77.71146109553008],
    [12.966949716809521, 77.71166465298649],
    [12.967010729829373, 77.71191014769703],
    [12.966316844515454, 77.71211080935157],
    [12.96634566829672, 77.71220666054872],
  ],
  "basketball-bblock": [
    [12.966818778907774, 77.71146109553008],
    [12.966657151889198, 77.711207760465],
    [12.965982288303713, 77.7114446798303],
    [12.966136263292751, 77.71190177496305],
    [12.965973231910628, 77.71191965963331],
  ],
  "basketball-cblock": [
    [12.966818778907774, 77.71146109553008],
    [12.966657151889198, 77.711207760465],
    [12.965856347559777, 77.71154009644013],
  ],
  "basketball-dblock": [
    [12.966818778907774, 77.71146109553008],
    [12.966516285539356, 77.71110310076793],
  ],
  "volleyball-main_gate": [
    [12.96690527702099, 77.71178140750145],
    [12.967480941993218, 77.71392045940188],
  ],
  "volleyball-canteen": [
    [12.96690527702099, 77.71178140750145],
    [12.966765671194379, 77.71145255757102],
  ],
  "volleyball-playground": [
    [12.96690527702099, 77.71178140750145],
    [12.96680140330842, 77.71154879618125],
    [12.966413070096815, 77.71166829211994],
  ],
  "volleyball-basketball": [
    [12.96690527702099, 77.71178140750145],
    [12.966818778907774, 77.71146109553008],
  ],
  "volleyball-hostel": [
    [12.96690527702099, 77.71178140750145],
    [12.96680140330842, 77.71154879618125],
    [12.966638279544366, 77.71120163718068],
    [12.966840440716511, 77.71114082111771],
    [12.966803061189433, 77.7109744052715],
  ],
  "volleyball-ablock": [
    [12.96690527702099, 77.71178140750145],
    [12.966960729829373, 77.71191014769703],
    [12.966316844515454, 77.71211080935157],
    [12.96634566829672, 77.71220666054872],
  ],
  "volleyball-bblock": [
    [12.96690527702099, 77.71178140750145],
    [12.966960729829373, 77.71191014769703],
    [12.966253844515454, 77.71211080935157],
    [12.966136263292751, 77.71190177496305],
    [12.965973231910628, 77.71191965963331],
  ],
  "volleyball-cblock": [
    [12.96690527702099, 77.71178140750145],
    [12.96685140330842, 77.71173879618125],
    [12.966657151889198, 77.711207760465],
    [12.965856347559777, 77.71154009644013],
  ],
  "volleyball-dblock": [
    [12.96690527702099, 77.71178140750145],
    [12.966516285539356, 77.71110310076793],
  ],
  "hostel-main_gate": [
    [12.966803061189433, 77.7109744052715],
    [12.966840440716511, 77.71114082111771],
    [12.966947750021633, 77.71110921611905],
    [12.967120724566939, 77.71185593733031],
    [12.966891958593855, 77.7119435801769],
    [12.967480941993218, 77.71392045940188],
  ],
  "hostel-canteen": [
    [12.966803061189433, 77.7109744052715],
    [12.966850751906482, 77.71114350623426],
    [12.966657151889198, 77.711207760465],
    [12.966765671194379, 77.71145255757102],
  ],
  "hostel-playground": [
    [12.966803061189433, 77.7109744052715],
    [12.966840440716511, 77.71114082111771],
    [12.966638279544366, 77.71120163718068],
    [12.96677140330842, 77.71154879618125],
    [12.966413070096815, 77.71166829211994],
  ],
  "hostel-basketball": [
    [12.966803061189433, 77.7109744052715],
    [12.966840440716511, 77.71114082111771],
    [12.966638279544366, 77.71120163718068],
    [12.966818778907774, 77.71146109553008],
  ],
  "hostel-volleyball": [
    [12.966803061189433, 77.7109744052715],
    [12.966840440716511, 77.71114082111771],
    [12.966638279544366, 77.71120163718068],
    [12.96680140330842, 77.71154879618125],
    [12.96690527702099, 77.71178140750145],
  ],
  "hostel-ablock": [
    [12.966803061189433, 77.7109744052715],
    [12.966840440716511, 77.71114082111771],
    [12.965982288303713, 77.7114446798303],
    [12.96634566829672, 77.71220666054872],
  ],
  "hostel-bblock": [
    [12.966803061189433, 77.7109744052715],
    [12.966840440716511, 77.71114082111771],
    [12.966002288303713, 77.7114446798303],
    [12.966136263292751, 77.71190177496305],
    [12.965973231910628, 77.71191965963331],
  ],
  "hostel-cblock": [
    [12.966803061189433, 77.7109744052715],
    [12.966840440716511, 77.71114082111771],
    [12.965856347559777, 77.71154009644013],
  ],
  "hostel-dblock": [
    [12.966803061189433, 77.7109744052715],
    [12.966840440716511, 77.71114082111771],
    [12.966566117256992, 77.7112405720311],
    [12.966516285539356, 77.71110310076793],
  ],
  "ablock-main_gate": [
    [12.96634566829672, 77.71220666054872],
    [12.966316844515454, 77.71211080935157],
    [12.966891958593855, 77.7119335801769],
    [12.967480941993218, 77.71392045940188],
  ],
  "ablock-canteen": [
    [12.96634566829672, 77.71220666054872],
    [12.966002288303713, 77.7114446798303],
    [12.966657151889198, 77.711207760465],
    [12.966765671194379, 77.71145255757102],
  ],
  "ablock-playground": [
    [12.96634566829672, 77.71220666054872],
    [12.966316844515454, 77.71211080935157],
    [12.967010729829373, 77.71191014769703],
    [12.966949716809521, 77.71166465298649],
    [12.96684140330842, 77.71168479618125],
    [12.966791930658627, 77.71155266948952],
    [12.966413070096815, 77.71166829211994],
  ],
  "ablock-basketball": [
    [12.96634566829672, 77.71220666054872],
    [12.966316844515454, 77.71211080935157],
    [12.967010729829373, 77.71191014769703],
    [12.966949716809521, 77.71166465298649],
    [12.966818778907774, 77.71146109553008],
  ],
  "ablock-volleyball": [
    [12.96634566829672, 77.71220666054872],
    [12.966316844515454, 77.71211080935157],
    [12.966960729829373, 77.71191014769703],
    [12.96690527702099, 77.71178140750145],
  ],
  "ablock-hostel": [
    [12.96634566829672, 77.71220666054872],
    [12.965982288303713, 77.7114446798303],
    [12.966840440716511, 77.71114082111771],
    [12.966803061189433, 77.7109744052715],
  ],
  "ablock-bblock": [
    [12.96634566829672, 77.71220666054872],
    [12.966136263292751, 77.71190177496305],
    [12.965973231910628, 77.71191965963331],
  ],
  "ablock-cblock": [
    [12.96634566829672, 77.71220666054872],
    [12.965970105186212, 77.71148185430906],
    [12.965856347559777, 77.71154009644013],
  ],
  "ablock-dblock": [
    [12.96634566829672, 77.71220666054872],
    [12.965990105186212, 77.71148185430906],
    [12.966566117256992, 77.7112405720311],
    [12.966516285539356, 77.7111031007679],
  ],
  "bblock-main_gate": [
    [12.965973231910628, 77.71191965963331],
    [12.966160203809272, 77.71188712712463],
    [12.96626086511384, 77.71211413510984],
    [12.966891958593855, 77.7119335801769],
    [12.967480941993218, 77.71392045940188],
  ],
  "bblock-canteen": [
    [12.965973231910628, 77.71191965963331],
    [12.966136263292751, 77.71190177496305],
    [12.965982288303713, 77.7114446798303],
    [12.966657151889198, 77.711207760465],
    [12.966765671194379, 77.71145255757102],
  ],
  "bblock-playground": [
    [12.965973231910628, 77.71191965963331],
    [12.966136263292751, 77.71190177496305],
    [12.965982288303713, 77.7114446798303],
    [12.966657151889198, 77.711207760465],
    [12.96680140330842, 77.71154879618125],
    [12.966413070096815, 77.71166829211994],
  ],
  "bblock-basketball": [
    [12.965973231910628, 77.71191965963331],
    [12.966136263292751, 77.71190177496305],
    [12.965982288303713, 77.7114446798303],
    [12.966657151889198, 77.711207760465],
    [12.966818778907774, 77.71146109553008],
  ],
  "bblock-volleyball": [
    [12.965973231910628, 77.71191965963331],
    [12.966136263292751, 77.71190177496305],
    [12.966253844515454, 77.71211080935157],
    [12.966960729829373, 77.71191014769703],
    [12.96690527702099, 77.71178140750145],
  ],
  "bblock-hostel": [
    [12.965973231910628, 77.71191965963331],
    [12.966136263292751, 77.71190177496305],
    [12.966002288303713, 77.7114446798303],
    [12.966840440716511, 77.71114082111771],
    [12.966803061189433, 77.7109744052715],
  ],
  "bblock-ablock": [
    [12.965973231910628, 77.71191965963331],
    [12.966136263292751, 77.71190177496305],
    [12.96634566829672, 77.71220666054872],
  ],
  "bblock-cblock": [
    [12.965973231910628, 77.71191965963331],
    [12.966136263292751, 77.71190177496305],
    [12.965983650930859, 77.71149019439882],
    [12.965856347559777, 77.71154009644013],
  ],
  "bblock-dblock": [
    [12.965973231910628, 77.71191965963331],
    [12.966136263292751, 77.71190177496305],
    [12.965990105186212, 77.71148185430906],
    [12.966566117256992, 77.7112405720311],
    [12.966516285539356, 77.7111031007679],
  ],
  "cblock-main_gate": [
    [12.965856347559777, 77.71154009644013],
    [12.96601492864516, 77.7115120561032],
    [12.96623086511384, 77.71211413510984],
    [12.966891958593855, 77.7119335801769],
    [12.967480941993218, 77.71392045940188],
  ],
  "cblock-canteen": [
    [12.965856347559777, 77.71154009644013],
    [12.966657151889198, 77.711207760465],
    [12.966765671194379, 77.71145255757102],
  ],
  "cblock-playground": [
    [12.965856347559777, 77.71154009644013],
    [12.966657151889198, 77.711207760465],
    [12.96680140330842, 77.71154879618125],
    [12.966413070096815, 77.71166829211994],
  ],
  "cblock-basketball": [
    [12.965856347559777, 77.71154009644013],
    [12.966657151889198, 77.711207760465],
    [12.966818778907774, 77.71146109553008],
  ],
  "cblock-volleyball": [
    [12.965856347559777, 77.71154009644013],
    [12.966657151889198, 77.711207760465],
    [12.96685140330842, 77.71173879618125],
    [12.96690527702099, 77.71178140750145],
  ],
  "cblock-hostel": [
    [12.965856347559777, 77.71154009644013],
    [12.966840440716511, 77.71114082111771],
    [12.966803061189433, 77.7109744052715],
  ],
  "cblock-ablock": [
    [12.965856347559777, 77.71154009644013],
    [12.965970105186212, 77.71148185430906],
    [12.96634566829672, 77.71220666054872],
  ],
  "cblock-bblock": [
    [12.965856347559777, 77.71154009644013],
    [12.965983650930859, 77.71149019439882],
    [12.966136263292751, 77.71190177496305],
    [12.965973231910628, 77.71191965963331],
  ],
  "cblock-dblock": [
    [12.965856347559777, 77.71154009644013],
    [12.965990105186212, 77.71148185430906],
    [12.966566117256992, 77.7112405720311],
    [12.966516285539356, 77.7111031007679],
  ],
  "dblock-main_gate": [
    [12.966516285539356, 77.7111031007679],
    [12.96670140330842, 77.71173879618125],
    [12.966949716809521, 77.71166465298649],
    [12.967040729829373, 77.71193014769703],
    [12.966891958593855, 77.7119835801769],
    [12.967480941993218, 77.71392045940188],
  ],
  "dblock-canteen": [
    [12.966516285539356, 77.71110310076793],
    [12.966765671194379, 77.71145255757102],
  ],
  "dblock-playground": [
    [12.966516285539356, 77.7111031007679],
    [12.966538279544366, 77.71123163718068],
    [12.966638279544366, 77.71120163718068],
    [12.96680140330842, 77.71154879618125],
    [12.966413070096815, 77.71166829211994],
  ],
  "dblock-basketball": [
    [12.966516285539356, 77.71110310076793],
    [12.966818778907774, 77.71146109553008],
  ],
  "dblock-volleyball": [
    [12.966516285539356, 77.71110310076793],
    [12.96690527702099, 77.71178140750145],
  ],
  "dblock-hostel": [
    [12.966516285539356, 77.7111031007679],
    [12.966566117256992, 77.7112405720311],
    [12.966840440716511, 77.71114082111771],
    [12.966803061189433, 77.7109744052715],
  ],
  "dblock-ablock": [
    [12.966516285539356, 77.7111031007679],
    [12.966566117256992, 77.7112405720311],
    [12.965990105186212, 77.71148185430906],
    [12.96634566829672, 77.71220666054872],
  ],
  "dblock-bblock": [
    [12.966516285539356, 77.7111031007679],
    [12.966566117256992, 77.7112405720311],
    [12.965990105186212, 77.71148185430906],
    [12.966136263292751, 77.71190177496305],
    [12.965973231910628, 77.71191965963331],
  ],
  "dblock-cblock": [
    [12.966516285539356, 77.7111031007679],
    [12.966566117256992, 77.7112405720311],
    [12.965990105186212, 77.71148185430906],
    [12.965856347559777, 77.71154009644013],
  ],

};

function PanToLocation({ position }) {
  const map = useMap();
  useEffect(() => {
    if (position) {
      map.setView(position, 18, { animate: true });
    }
  }, [position, map]);
  return null;
}

const campusLocations = [
  { id: "1", name: "Main Gate", lat: 12.967480941993218, lng: 77.71392045940188, type: "outdoor" },
  { id: "2", name: "Canteen", lat: 12.966765671194379, lng: 77.71145255757102, type: "outdoor" },
  { id: "3", name: "Playground", lat: 12.966413070096815, lng: 77.71166829211994, type: "outdoor" },
  { id: "4", name: "Basket Ball Court", lat: 12.966818778907774, lng: 77.71146109553008, type: "outdoor" },
  { id: "5", name: "Volley Ball Court", lat: 12.96690527702099, lng: 77.71178140750145, type: "outdoor" },
  { id: "6", name: "Hostel", lat: 12.966803061189433, lng: 77.7109744052715, type: "outdoor" },
];

const buildings = [
  { id: "7", name: "A BLOCK", lat: 12.96634566829672, lng: 77.71220666054872, type: "outdoor-building" },
  { id: "8", name: "B BLOCK", lat: 12.965973231910628, lng: 77.71191965963331, type: "outdoor-building" },
  { id: "9", name: "C BLOCK", lat: 12.965856347559777, lng: 77.71154009644013, type: "outdoor-building" },
  { id: "dblock", name: "D BLOCK", lat: 12.966516285539356, lng: 77.71110310076793, type: "outdoor-building" },
];

const cmritBoundary = [
  [12.96700137421965, 77.71077920364468],
  [12.965562629785115, 77.71128862238871],
  [12.965997971150033, 77.7126311841697],
  [12.966848965661268, 77.71229138993624],
  [12.967428211701284, 77.71394606051231],
  [12.96756682724809, 77.71391067872575],
];

const currentLocationIcon = new L.Icon({
  iconUrl: "https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png",
  iconSize: [25, 41],
  iconAnchor: [12, 41],
  popupAnchor: [1, -34],
  shadowUrl: "https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png",
  shadowSize: [41, 41],
});

const destinationIcon = new L.Icon({
  iconUrl: "https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-violet.png",
  iconSize: [25, 41],
  iconAnchor: [12, 41],
  popupAnchor: [1, -34],
  shadowUrl: "https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png",
  shadowSize: [41, 41],
});

// --- C BLOCK LAYOUT (Based on CMRIT Floor Plans) ---

// Placeholder: The actual entrance coordinates for C Block are not known.
const cBlockEntrance = { x: 400, y: 300 }; // Assuming a corner entrance for layout
const cBlockGroundRooms = [
  { id: "staff_room", name: "TYL Staffroom", x: 520, y: 50, w: 80, h: 120, path: [[400, 280], [400, 160], [560, 160],] },
  { id: "math_lab", name: "Math Lab", x: 50, y: 50, w: 100, h: 60, path: [[400, 280], [400, 230], [100, 230], [100, 115]] },
];
const cBlockFirstRooms = [
  // Left Wing (L-shaped)
  { id: "lh106", name: "LH-106", x: 10, y: 50, w: 100, h: 65, path: [[320, 150], [320, 130], [150, 130], [150, 90], [120, 90]] },
  { id: "pssmc_lab", name: "PSS/MC LAB", x: 10, y: 125, w: 100, h: 65, path: [[320, 150], [320, 130], [150, 130], [150, 160], [120, 160]] },
  { id: "ldcaed_lab", name: "LD/CAED LAB", x: 10, y: 200, w: 100, h: 65, path: [[320, 150], [320, 130], [150, 130], [150, 230], [120, 230]] },
  { id: "stair1", name: "Stairs ", x: 10, y: 275, w: 100, h: 50, path: [[110, 300], [130, 300], [130, 320], [80, 320]] },
  { id: "server_room", name: "SERVER ROOM", x: 10, y: 335, w: 100, h: 65, path: [[320, 150], [320, 130], [150, 130], [150, 370], [120, 370]] },


  // Central Labs

  { id: "dcmtim_lab", name: "DCM/TIM Lab (Machines Lab)", x: 170, y: 155, w: 100, h: 110, path: [[320, 150], [320, 130], [220, 130], [220, 150]] },
  { id: "csmcs_lab", name: "CSM/CS LAB", x: 170, y: 320, w: 100, h: 80, path: [[320, 150], [320, 130], [150, 130], [150, 370], [170, 370]] },

  // Top Row (Lecture Halls & Offices)
  { id: "aecelec_lab", name: "AEC/EC LAB", x: 170, y: 50, w: 100, h: 60, path: [[320, 150], [320, 130], [220, 130], [220, 120]] },
  { id: "rest_rooms_t1", name: "Washroom", x: 280, y: 50, w: 80, h: 60, path: [[320, 120], [320, 150]] },
  { id: "lh105", name: "LH-105", x: 370, y: 50, w: 100, h: 60, path: [[320, 150], [320, 130], [420, 130], [420, 120]] },
  { id: "hod_office_hall", name: "HOD Office and Staffroom", x: 480, y: 50, w: 265, h: 60, path: [[655, 120], [655, 135], [320, 135], [320, 150]] },
  { id: "rest_rooms_t2", name: "🚻", x: 485, y: 55, w: 30, h: 50, path: [[0, 0], [0, 0]] },
  { id: "stair2", name: "Stairs ", x: 755, y: 50, w: 50, h: 60, path: [[795, 110], [795, 130], [775, 130], [775, 80]] },

  // Middle Row (Lecture Halls & Library)
  { id: "stair3", name: "Stairs ", x: 280, y: 155, w: 70, h: 100, path: [[320, 150], [320, 130], [350, 130], [350, 200]] },
  { id: "lh104", name: "LH-104", x: 360, y: 155, w: 90, h: 60, path: [[320, 150], [320, 130], [400, 130], [400, 150]] },
  { id: "lh103", name: "LH-103", x: 460, y: 155, w: 90, h: 60, path: [[320, 150], [320, 130], [500, 130], [500, 150]] },
  { id: "lh102", name: "LH-102", x: 560, y: 155, w: 90, h: 60, path: [[320, 150], [320, 130], [600, 130], [600, 150]] },
  { id: "lh101", name: "LH-101", x: 660, y: 155, w: 90, h: 60, path: [[320, 150], [320, 130], [700, 130], [700, 150]] },
  { id: "student_lounge_1", name: "Student Lounge", x: 760, y: 155, w: 45, h: 60, path: [[320, 150], [320, 130], [785, 130], [785, 150]] },

  // Bottom Store Rooms
  { id: "electrical_store", name: "1, 2 & 3 ELECTRICAL STORE ROOMS", x: 300, y: 650, w: 400, h: 30, path: [[50, 50], [500, 650]] },
];

// --- 2ND FLOOR LAYOUT - DEPARTMENT OF ISE (Based on image_faa0e7.png) ---
const cBlockSecondRooms = [
  // Left Wing (L-shaped)
  { id: "lh207", name: "LH-207", x: 10, y: 50, w: 100, h: 65, path: [[320, 150], [320, 130], [150, 130], [150, 90], [120, 90]] },
  { id: "l208", name: "L-208", x: 10, y: 125, w: 100, h: 65, path: [[320, 150], [320, 130], [150, 130], [150, 160], [120, 160]] },
  { id: "l209", name: "L-209", x: 10, y: 200, w: 100, h: 65, path: [[320, 150], [320, 130], [150, 130], [150, 230], [120, 230]] },
  { id: "stair4", name: "Stairs ", x: 10, y: 275, w: 100, h: 50, path: [[110, 300], [130, 300], [130, 320], [80, 320]] },
  { id: "l210", name: "L-210", x: 10, y: 335, w: 100, h: 65, path: [[320, 150], [320, 130], [150, 130], [150, 370], [120, 370]] },
  { id: "l211_b", name: "L-211", x: 170, y: 335, w: 100, h: 65, path: [[320, 150], [320, 130], [150, 130], [150, 370], [170, 370]] },

  // Central Labs
  { id: "l213", name: "L-213", x: 170, y: 155, w: 100, h: 65, path: [[320, 150], [320, 130], [220, 130], [220, 150]] },
  { id: "l212", name: "L-212", x: 170, y: 230, w: 100, h: 65, path: [[320, 150], [320, 130], [150, 130], [150, 270], [170, 270]] },

  // Top Row (Lecture Halls & Staff Area)
  { id: "lh206", name: "LH-206", x: 170, y: 50, w: 100, h: 60, path: [[320, 150], [320, 130], [220, 130], [220, 120]] },
  { id: "washroom_2", name: "Washroom", x: 280, y: 50, w: 80, h: 60, path: [[320, 120], [320, 150]] },
  { id: "lh205", name: "LH-205", x: 370, y: 50, w: 100, h: 60, path: [[320, 150], [320, 130], [420, 130], [420, 120]] },
  { id: "hod_office_hall", name: "Staffroom", x: 480, y: 50, w: 265, h: 60, path: [[655, 120], [655, 135], [320, 135], [320, 150]] },
  { id: "rest_rooms_t2", name: "🚻", x: 485, y: 55, w: 30, h: 50, path: [[0, 0], [0, 0]] },
  { id: "stair5", name: "Stairs ", x: 755, y: 50, w: 50, h: 60, path: [[795, 110], [795, 130], [775, 130], [775, 80]] },

  // Middle Row (Lecture Halls & Library)
  { id: "stair6", name: "Stairs ", x: 280, y: 155, w: 70, h: 100, path: [[320, 150], [320, 130], [350, 130], [350, 200]] },

  { id: "lh204", name: "LH-204", x: 360, y: 155, w: 90, h: 60, path: [[320, 150], [320, 130], [400, 130], [400, 150]] },
  { id: "lh203", name: "LH-203", x: 460, y: 155, w: 90, h: 60, path: [[320, 150], [320, 130], [500, 130], [500, 150]] },
  { id: "lh202", name: "LH-202", x: 560, y: 155, w: 90, h: 60, path: [[320, 150], [320, 130], [600, 130], [600, 150]] },
  { id: "lh201", name: "LH-201", x: 660, y: 155, w: 90, h: 60, path: [[320, 150], [320, 130], [700, 130], [700, 150]] },
  { id: "dept_library_2", name: "Student Lounge", x: 760, y: 155, w: 45, h: 60, path: [[320, 150], [320, 130], [785, 130], [785, 150]] },
];

// --- 3RD FLOOR LAYOUT - DEPARTMENT OF ECE (Based on image_f3fad4fd.jpg) ---
const cBlockThirdRooms = [
  // Left Wing (L-shaped)
  { id: "mtech_l307", name: "M.Tech L-307 && L-308", x: 10, y: 50, w: 100, h: 65, path: [[320, 150], [320, 130], [150, 130], [150, 90], [120, 90]] },
  { id: "vlsi_l303", name: "L-303 VLSI LAB/MP LAB", x: 10, y: 125, w: 100, h: 65, path: [[320, 150], [320, 130], [150, 130], [150, 160], [120, 160]] },
  { id: "hdl_l302", name: "L-302 HDL LAB/DSP LAB", x: 10, y: 200, w: 100, h: 65, path: [[320, 150], [320, 130], [150, 130], [150, 230], [120, 230]] },
  { id: "stair7", name: "Stairs", x: 10, y: 275, w: 100, h: 50, path: [[110, 300], [130, 300], [130, 320], [80, 320]] },
  { id: "comm_l301", name: "L-301 Comm And Adv Comm. Lab", x: 10, y: 335, w: 100, h: 65, path: [[320, 150], [320, 130], [150, 130], [150, 370], [120, 370]] },

  // Central Labs
  { id: "de_l307", name: "DE / MC Lab (L-307)", x: 170, y: 155, w: 100, h: 60, path: [[320, 150], [320, 130], [220, 130], [220, 150]] },
  { id: "aec_l306", name: "L-306 AEC Lab", x: 170, y: 225, w: 100, h: 60, path: [[320, 150], [320, 130], [150, 130], [150, 260], [170, 260]] },
  { id: "proj_l305", name: "L-305 Project Lab", x: 170, y: 295, w: 100, h: 40, path: [[320, 150], [320, 130], [150, 130], [150, 315], [170, 315]] },
  { id: "pe_l304", name: "L-304 PE Lab", x: 170, y: 345, w: 100, h: 55, path: [[320, 150], [320, 130], [150, 130], [150, 370], [170, 370]] },

  // Top Row (Lecture Halls & Offices)
  { id: "lh306", name: "LH-306", x: 170, y: 50, w: 100, h: 60, path: [[320, 150], [320, 130], [220, 130], [220, 120]] },
  { id: "rest_rooms_3a", name: "Washroom", x: 280, y: 50, w: 80, h: 60, path: [[320, 120], [320, 150]] },
  { id: "lh305", name: "LH-305", x: 370, y: 50, w: 100, h: 60, path: [[320, 150], [320, 130], [420, 130], [420, 120]] },
  { id: "hod_office_hall", name: "HOD Office and Staffroom", x: 480, y: 50, w: 265, h: 60, path: [[655, 120], [655, 135], [320, 135], [320, 150]] },
  { id: "rest_rooms_t2", name: "🚻", x: 485, y: 55, w: 30, h: 50, path: [[0, 0], [0, 0]] },
  { id: "stair8", name: "Stairs", x: 755, y: 50, w: 50, h: 60, path: [[795, 110], [795, 130], [775, 130], [775, 80]] },
  { id: "stair9", name: "Stairs ", x: 280, y: 155, w: 70, h: 100, path: [[320, 150], [320, 130], [350, 130], [350, 200]] },

  // Middle Row (Lecture Halls & Library)
  { id: "lh304", name: "LH-304", x: 360, y: 155, w: 90, h: 60, path: [[320, 150], [320, 130], [400, 130], [400, 150]] },
  { id: "lh303", name: "LH-303", x: 460, y: 155, w: 90, h: 60, path: [[320, 150], [320, 130], [500, 130], [500, 150]] },
  { id: "lh302", name: "LH-302", x: 560, y: 155, w: 90, h: 60, path: [[320, 150], [320, 130], [600, 130], [600, 150]] },
  { id: "lh301", name: "LH-301", x: 660, y: 155, w: 90, h: 60, path: [[320, 150], [320, 130], [700, 130], [700, 150]] },
  { id: "student_lounge_3", name: "Student Lounge", x: 760, y: 155, w: 45, h: 60, path: [[320, 150], [320, 130], [785, 130], [785, 150]] },
];

// --- 4TH FLOOR DEPARTMENT LAYOUT (Based on image_15279244.jpg) ---
const cBlockFourthRooms = [
  // Left Wing (L-shaped)
  { id: "lh407", name: "LH-407", x: 10, y: 50, w: 100, h: 65, path: [[320, 150], [320, 130], [150, 130], [150, 90], [120, 90]] },
  { id: "lab408", name: "L-408", x: 10, y: 125, w: 100, h: 65, path: [[320, 150], [320, 130], [150, 130], [150, 160], [120, 160]] },
  { id: "lab409", name: "L-409", x: 10, y: 200, w: 100, h: 65, path: [[320, 150], [320, 130], [150, 130], [150, 230], [120, 230]] },
  { id: "lab410", name: "L-410", x: 10, y: 335, w: 100, h: 65, path: [[320, 150], [320, 130], [150, 130], [150, 370], [120, 370]] },
  { id: "stair11", name: "Stairs", x: 10, y: 275, w: 100, h: 50, path: [[110, 300], [130, 300], [130, 320], [80, 320]] },
  { id: "stair12", name: "Stairs ", x: 280, y: 155, w: 70, h: 100, path: [[320, 150], [320, 130], [350, 130], [350, 200]] },
  // Central Labs
  { id: "lh406", name: "LH-406", x: 170, y: 50, w: 100, h: 60, path: [[320, 150], [320, 130], [220, 130], [220, 120]] },
  { id: "rest_room_4", name: "Washroom", x: 280, y: 50, w: 80, h: 60, path: [[320, 120], [320, 150]] },
  { id: "lab413", name: "L-413", x: 170, y: 155, w: 100, h: 60, path: [[320, 150], [320, 130], [220, 130], [220, 150]] },
  { id: "lab412b", name: "L-412b", x: 170, y: 225, w: 100, h: 45, path: [[320, 150], [320, 130], [150, 130], [150, 250], [170, 250]] },
  { id: "lab412a", name: "L-412a", x: 170, y: 280, w: 100, h: 45, path: [[320, 150], [320, 130], [150, 130], [150, 300], [170, 300]] },
  { id: "lab411", name: "L-411", x: 170, y: 335, w: 100, h: 65, path: [[320, 150], [320, 130], [150, 130], [150, 370], [170, 370]] },

  // Right Wing (Offices, Lecture Halls, Library)
  { id: "lh405", name: "LH-405", x: 370, y: 50, w: 100, h: 60, path: [[320, 150], [320, 130], [420, 130], [420, 120]] },
  { id: "hod_office_hall", name: "Staffroom", x: 480, y: 50, w: 265, h: 60, path: [[655, 120], [655, 135], [320, 135], [320, 150]] },
  { id: "rest_rooms_t4", name: "🚻", x: 485, y: 55, w: 30, h: 50, path: [[0, 0], [0, 0]] },
  { id: "stair10", name: "Stairs", x: 755, y: 50, w: 50, h: 60, path: [[795, 110], [795, 130], [775, 130], [775, 80]] },
  { id: "lh404", name: "LH-404", x: 360, y: 155, w: 90, h: 60, path: [[320, 150], [320, 130], [400, 130], [400, 150]] },
  { id: "lh403", name: "LH-403", x: 460, y: 155, w: 90, h: 60, path: [[320, 150], [320, 130], [500, 130], [500, 150]] },
  { id: "lh402", name: "LH-402", x: 560, y: 155, w: 90, h: 60, path: [[320, 150], [320, 130], [600, 130], [600, 150]] },
  { id: "lh401", name: "LH-401", x: 660, y: 155, w: 90, h: 60, path: [[320, 150], [320, 130], [700, 130], [700, 150]] },
  { id: "student_lounge_4", name: "Student Lounge", x: 760, y: 155, w: 50, h: 60, path: [[320, 150], [320, 130], [785, 130], [785, 150]] },
];

// --- 5TH FLOOR LAYOUT - DEPARTMENT OF CSE (Based on image_7bcadc98.jpg) ---
const cBlockFifthRooms = [
  // Left Wing (L-shaped)
  { id: "lh506", name: "LH-506", x: 10, y: 50, w: 100, h: 65, path: [[320, 150], [320, 130], [150, 130], [150, 90], [120, 90]] },
  { id: "l503", name: "L-503", x: 10, y: 125, w: 100, h: 65, path: [[320, 150], [320, 130], [150, 130], [150, 160], [120, 160]] },
  { id: "l502", name: "L-502", x: 10, y: 200, w: 100, h: 65, path: [[320, 150], [320, 130], [150, 130], [150, 230], [120, 230]] },
  { id: "stair13", name: "Stairs", x: 10, y: 275, w: 100, h: 50, path: [[110, 300], [130, 300], [130, 320], [80, 320]] },
  { id: "l501", name: "L-501", x: 10, y: 335, w: 100, h: 65, path: [[320, 150], [320, 130], [150, 130], [150, 370], [120, 370]] },
  // Central Labs
  { id: "lh505", name: "LH-505", x: 170, y: 50, w: 100, h: 60, path: [[320, 150], [320, 130], [220, 130], [220, 120]] },
  { id: "washroom_5", name: "Washroom", x: 280, y: 50, w: 80, h: 60, path: [[320, 120], [320, 150]] },
  { id: "stair15", name: "Stairs ", x: 280, y: 155, w: 70, h: 100, path: [[320, 150], [320, 130], [350, 130], [350, 200]] },
  { id: "l505", name: "L-505", x: 170, y: 225, w: 100, h: 60, path: [[320, 150], [320, 130], [150, 130], [150, 270], [170, 270]] },
  { id: "l506", name: "L-506", x: 170, y: 155, w: 100, h: 60, path: [[320, 150], [320, 130], [220, 130], [220, 150]] },
  { id: "coe_cybersecurity", name: "CoE Cybersecurity", x: 170, y: 295, w: 100, h: 30, path: [[320, 150], [320, 130], [150, 130], [150, 310], [170, 310]] },
  { id: "l504", name: "L-504", x: 170, y: 335, w: 100, h: 65, path: [[320, 150], [320, 130], [150, 130], [150, 370], [170, 370]] },

  // Top Row (Offices & Lecture Halls)
  { id: "mtech_cse_lab", name: "M.TECH CSE LAB", x: 370, y: 50, w: 100, h: 60, path: [[320, 150], [320, 130], [420, 130], [420, 120]] },
  { id: "hod_office_hall5", name: "HOD Office and Staffroom", x: 480, y: 50, w: 265, h: 60, path: [[655, 120], [655, 135], [320, 135], [320, 150]] },
  { id: "rest_rooms_t5", name: "🚻", x: 485, y: 55, w: 30, h: 50, path: [[0, 0], [0, 0]] },
  { id: "stair14", name: "Stairs", x: 755, y: 50, w: 50, h: 60, path: [[795, 110], [795, 130], [775, 130], [775, 80]] },

  // Middle Row (Lecture Halls & Library)
  { id: "lh504", name: "LH-504", x: 360, y: 155, w: 90, h: 60, path: [[320, 150], [320, 130], [400, 130], [400, 150]] },
  { id: "lh503", name: "LH-503", x: 460, y: 155, w: 90, h: 60, path: [[320, 150], [320, 130], [500, 130], [500, 150]] },
  { id: "lh502", name: "LH-502", x: 560, y: 155, w: 90, h: 60, path: [[320, 150], [320, 130], [600, 130], [600, 150]] },
  { id: "lh501", name: "LH-501", x: 660, y: 155, w: 90, h: 60, path: [[320, 150], [320, 130], [700, 130], [700, 150]] },
  { id: "student_lounge_5", name: "Student Lounge", x: 760, y: 155, w: 50, h: 60, path: [[320, 150], [320, 130], [785, 130], [785, 150]] },
];

// Example usage:
// console.log(cBlockLayout.firstFloor);
// console.log(cBlockLayout.fifthFloor.find(r => r.id === 'lh501'));
// Ground floor (Base layout)
const dBlockEntrance = { x: 400, y: 300 };
const dBlockGroundRooms = [
  { id: "washroom", name: "Washroom", x: 50, y: 50, w: 100, h: 60, path: [[400, 280], [400, 230], [100, 230], [100, 120]] },
  { id: "avhall", name: "AV Hall", x: 160, y: 50, w: 200, h: 150, path: [[400, 280], [400, 250], [260, 250], [260, 210]] },
  { id: "stairs", name: "Stairs ", x: 370, y: 50, w: 40, h: 100, path: [[390, 160], [390, 280]] },
  { id: "dl001", name: "DL-001", x: 420, y: 50, w: 80, h: 80, path: [[400, 280], [400, 180], [460, 180], [460, 140]] },
  { id: "dl002", name: "DL-002", x: 520, y: 50, w: 80, h: 100, path: [[400, 280], [400, 180], [560, 180], [560, 160],] },
  { id: "dl003", name: "DL-003", x: 620, y: 50, w: 80, h: 80, path: [[400, 280], [400, 180], [660, 180], [660, 140]] },
  { id: "dl005", name: "DL-005", x: 720, y: 50, w: 80, h: 80, path: [[400, 280], [400, 180], [760, 180], [760, 140]] },
  { id: "meeting", name: "Meeting Room", x: 50, y: 280, w: 200, h: 80, path: [[400, 280], [400, 250], [200, 250], [200, 275]] },
  { id: "dl004", name: "DL-004", x: 680, y: 200, w: 120, h: 80, path: [[400, 280], [400, 180], [745, 180], [745, 195]] },
];

// First floor (aligned right-side like ground)

const dBlockFirstRooms = [
  { id: "washroom1", name: "Washroom", x: 570, y: 300, w: 100, h: 60, path: [[300, 260], [300, 150], [620, 150], [620, 295]] },
  { id: "avhall1", name: "AV Hall", x: 350, y: 210, w: 200, h: 150, path: [[300, 260], [300, 150], [450, 150], [450, 205]] },
  { id: "aimlstaff", name: "AIML Staffroom", x: 50, y: 80, w: 200, h: 300, path: [[300, 260], [300, 210], [220, 210], [220, 240]] },
  { id: "stairs1", name: "Stairs ", x: 270, y: 260, w: 60, h: 100, path: [[300, 260], [300, 240], [320, 240], [320, 320]] },
  { id: "aimlhod", name: "AIML HOD Cabin", x: 190, y: 80, w: 60, h: 60, path: [[300, 260], [300, 210], [180, 210], [180, 160], [220, 160], [220, 150]] },
];

// Second floor (kept aligned)

const dBlockSecondRooms = [
  { id: "me201", name: "ME 201", x: 50, y: 160, w: 120, h: 90, path: [[300, 270], [300, 210], [180, 210]] },
  { id: "me205", name: "ME 205", x: 500, y: 50, w: 120, h: 90, path: [[300, 270], [300, 200], [580, 200], [580, 150]] },
  { id: "me204", name: "ME 204", x: 360, y: 50, w: 120, h: 90, path: [[300, 270], [300, 200], [380, 200], [380, 150]] },
  { id: "me203", name: "ME 203", x: 220, y: 50, w: 120, h: 90, path: [[300, 270], [300, 150]] },
  { id: "me202", name: "ME 202", x: 80, y: 50, w: 120, h: 90, path: [[300, 270], [300, 170], [190, 170], [190, 150]] },
  { id: "innovation", name: "Innovation & Entrepreneurship Cell", x: 50, y: 270, w: 200, h: 100, path: [[300, 270], [300, 250], [200, 250], [200, 270]] },
  { id: "stairs2", name: "Stairs ", x: 270, y: 270, w: 60, h: 100, path: [[300, 270], [300, 250], [320, 250], [320, 335]] },
  { id: "washroom1", name: "Washroom", x: 570, y: 320, w: 100, h: 60, path: [[300, 270], [300, 230], [620, 230], [620, 315]] },
  { id: "avhall1", name: "AV Hall", x: 350, y: 270, w: 200, h: 130, path: [[300, 270], [300, 230], [450, 230], [450, 265]] },
];

// Third floor (aligned: AIDS staffroom same as AIML staffroom)

const dBlockThirdRooms = [
  { id: "cv302", name: "CV 302", x: 410, y: 50, w: 120, h: 90, path: [[300, 270], [300, 200], [450, 200], [450, 150]] },
  { id: "cv301", name: "CV 301", x: 270, y: 50, w: 120, h: 90, path: [[300, 270], [300, 150]] },
  { id: "cv303", name: "CV 303", x: 550, y: 50, w: 120, h: 90, path: [[300, 270], [300, 200], [600, 200], [600, 150]] },
  { id: "aidsstaffroom", name: "AIDS Staffroom", x: 50, y: 180, w: 200, h: 220, path: [[300, 270], [300, 250], [250, 250]] },
  { id: "stairs3", name: "Stairs ", x: 270, y: 270, w: 60, h: 100, path: [[300, 270], [300, 250], [320, 250], [320, 335]] },
  { id: "washroom", name: "Washroom", x: 570, y: 320, w: 100, h: 60, path: [[300, 270], [300, 230], [620, 230], [620, 315]] },
  { id: "avhall", name: "AV Hall", x: 350, y: 270, w: 200, h: 130, path: [[300, 270], [300, 230], [450, 230], [450, 265]] },
];

// Fourth floor (same alignment again)

const dBlockFourthRooms = [
  { id: "cv400", name: "CV 400", x: 50, y: 160, w: 120, h: 90, path: [[300, 270], [300, 200], [180, 200]] },
  { id: "cv404", name: "CV 404", x: 530, y: 50, w: 120, h: 90, path: [[300, 270], [300, 200], [580, 200], [580, 150]] },
  { id: "cv403", name: "CV 403", x: 380, y: 50, w: 120, h: 90, path: [[300, 270], [300, 200], [400, 200], [400, 150]] },
  { id: "cv402", name: "CV 402", x: 230, y: 50, w: 120, h: 90, path: [[300, 270], [300, 150]] },
  { id: "cv401", name: "CV 401", x: 80, y: 50, w: 120, h: 90, path: [[300, 270], [300, 170], [190, 170], [190, 150]] },
  { id: "imagecell", name: "Image and Video Analytics Cell", x: 50, y: 270, w: 200, h: 130, path: [[300, 270], [300, 250], [200, 250], [200, 265]] },
  { id: "stairs4", name: "Stairs ", x: 270, y: 270, w: 60, h: 100, path: [[300, 270], [300, 250], [320, 250], [320, 335]] },
  { id: "washroom", name: "Washroom", x: 570, y: 320, w: 100, h: 60, path: [[300, 270], [300, 230], [620, 230], [620, 315]] },
  { id: "avhall", name: "AV Hall", x: 350, y: 270, w: 200, h: 130, path: [[300, 270], [300, 230], [450, 230], [450, 265]] },
];



const allSearchableRooms = [
  // ------------------------------------
  // --- D BLOCK ROOMS (ORIGINAL) ---
  // ------------------------------------

  // Ground Floor
  { name: "Washroom (D Block)", floor: "dblock-ground", roomId: "washroom" },
  { name: "AV Hall (D Block)", floor: "dblock-ground", roomId: "avhall" },
  { name: "Stairs  (D Block)", floor: "dblock-ground", roomId: "stairs" },
  { name: "DL-001", floor: "dblock-ground", roomId: "dl001" },
  { name: "DL-002", floor: "dblock-ground", roomId: "dl002" },
  { name: "DL-003", floor: "dblock-ground", roomId: "dl003" },
  { name: "DL-005", floor: "dblock-ground", roomId: "dl005" }, // Added DL-005 from the map data
  { name: "Meeting Room (D Block)", floor: "dblock-ground", roomId: "meeting" },
  { name: "DL-004", floor: "dblock-ground", roomId: "dl004" },

  // First Floor
  { name: "Washroom (D Block First)", floor: "dblock-first", roomId: "washroom1" },
  { name: "AV Hall (D Block First)", floor: "dblock-first", roomId: "avhall1" },
  { name: "Meeting Room (D Block First)", floor: "dblock-first", roomId: "meeting1" },
  { name: "AIML Staffroom", floor: "dblock-first", roomId: "aimlstaff" },
  { name: "AIML HOD Cabin", floor: "dblock-first", roomId: "aimlhod" }, // Added from the map data
  { name: "Stairs  (D Block First)", floor: "dblock-first", roomId: "stairs1" }, // Added from the map data

  // Second Floor
  { name: "ME 201", floor: "dblock-second", roomId: "me201" },
  { name: "ME 202", floor: "dblock-second", roomId: "me202" },
  { name: "ME 203", floor: "dblock-second", roomId: "me203" },
  { name: "ME 204", floor: "dblock-second", roomId: "me204" },
  { name: "ME 205", floor: "dblock-second", roomId: "me205" },
  { name: "Innovation & Entrepreneurship Cell", floor: "dblock-second", roomId: "innovation" },
  { name: "Stairs  (D Block Second)", floor: "dblock-second", roomId: "stairs2" },
  { name: "AV Hall (D Block Second)", floor: "dblock-second", roomId: "avhall" },
  { name: "Washroom (D Block Second)", floor: "dblock-second", roomId: "washroom" },

  // Third Floor
  { name: "CV 301", floor: "dblock-third", roomId: "cv301" },
  { name: "CV 302", floor: "dblock-third", roomId: "cv302" },
  { name: "CV 303", floor: "dblock-third", roomId: "cv303" },
  { name: "AIDS Staffroom", floor: "dblock-third", roomId: "aidsstaffroom" },
  { name: "Stairs  (D Block Third)", floor: "dblock-third", roomId: "stairs3" },
  { name: "AV Hall (D Block Third)", floor: "dblock-third", roomId: "avhall" },
  { name: "Washroom (D Block Third)", floor: "dblock-third", roomId: "washroom" },

  // Fourth Floor
  { name: "CV 400", floor: "dblock-fourth", roomId: "cv400" },
  { name: "CV 401", floor: "dblock-fourth", roomId: "cv401" },
  { name: "CV 402", floor: "dblock-fourth", roomId: "cv402" },
  { name: "CV 403", floor: "dblock-fourth", roomId: "cv403" },
  { name: "CV 404", floor: "dblock-fourth", roomId: "cv404" },
  { name: "Image and Video Analytics Cell", floor: "dblock-fourth", roomId: "imagecell" },
  { name: "Stairs  (D Block Fourth)", floor: "dblock-fourth", roomId: "stairs4" },
  { name: "AV Hall (D Block Fourth)", floor: "dblock-fourth", roomId: "avhall" },
  { name: "Washroom (D Block Fourth)", floor: "dblock-fourth", roomId: "washroom" },


  // ------------------------------------
  // --- C BLOCK ROOMS (NEW) ---
  // ------------------------------------

  // Ground Floor: (BLANK)
  { name: "TYL Staffroom (C Block)", floor: "cblock-ground", roomId: "staff_room" },
  { name: "Math Lab(C Block)", floor: "cblock-ground", roomId: "math_lab" },

  // 1ST FLOOR (EEE)
  { name: "LH-106 (C Block)", floor: "cblock-first", roomId: "lh106" },
  { name: "PSS/MC LAB (C Block)", floor: "cblock-first", roomId: "pssmc_lab" },
  { name: "LD/CAED LAB (C Block)", floor: "cblock-first", roomId: "ldcaed_lab" },
  { name: "SERVER ROOM (C Block)", floor: "cblock-first", roomId: "server_room" },
  { name: "CSM/CS LAB (C Block)", floor: "cblock-first", roomId: "csmcs_lab" },
  { name: "DCM/TIM Lab (Machines Lab)", floor: "cblock-first", roomId: "dcmtim_lab" },
  { name: "AEC/EC LAB (C Block)", floor: "cblock-first", roomId: "aecelec_lab" },
  { name: "LH-105 (C Block)", floor: "cblock-first", roomId: "lh105" },
  { name: "HOD Office AND FACULTY HALL (C Block)", floor: "cblock-first", roomId: "hod_office_hall" },
  { name: "LH-104 (C Block)", floor: "cblock-first", roomId: "lh104" },
  { name: "LH-103 (C Block)", floor: "cblock-first", roomId: "lh103" },
  { name: "LH-102 (C Block)", floor: "cblock-first", roomId: "lh102" },
  { name: "LH-101 (C Block)", floor: "cblock-first", roomId: "lh101" },
  { name: "DEPT LIBRARY (C Block First)", floor: "cblock-first", roomId: "dept_library_1" },
  { name: "STUDENT LOUNGE (C Block First)", floor: "cblock-first", roomId: "student_lounge_1" },
  { name: "Washroom (C Block 1st Fl)", floor: "cblock-first", roomId: "rest_rooms_t1" },
  { name: "Stairs (C Block 1st L-Side)", floor: "cblock-first", roomId: "stair1" },
  { name: "Stairs(C Block 1st R-Side)", floor: "cblock-first", roomId: "stair2" },
  { name: "Stairs(C Block 1st center)", floor: "cblock-first", roomId: "stair3" },


  // 2ND FLOOR (ISE)
  { name: "LH-207 (C Block)", floor: "cblock-second", roomId: "lh207" },
  { name: "L-208 (Database Applications Lab)", floor: "cblock-second", roomId: "l208" },
  { name: "L-209 (System Software & Operating System Lab)", floor: "cblock-second", roomId: "l209" },
  { name: "L-210 (Web Programming Lab)", floor: "cblock-second", roomId: "l210" },
  { name: "L-211 (Networks Lab / File Structures Lab)", floor: "cblock-second", roomId: "l211_b" },
  { name: "L-213 (Web Programming Lab / Project Lab)", floor: "cblock-second", roomId: "l213" },
  { name: "L-212 (Analog & Digital Electronics Lab)", floor: "cblock-second", roomId: "l212" },
  { name: "LH-206 (C Block)", floor: "cblock-second", roomId: "lh206" },
  { name: "Washroom (C Block Second)", floor: "cblock-second", roomId: "washroom_2" },
  { name: "LH-205 (C Block)", floor: "cblock-second", roomId: "lh205" },
  { name: "STAFF TOILET (C Block Second)", floor: "cblock-second", roomId: "staff_toilet" },
  { name: "STAFF ROOM (C Block Second)", floor: "cblock-second", roomId: "staff_room_2" },
  { name: "LH-204 (C Block)", floor: "cblock-second", roomId: "lh204" },
  { name: "LH-203 (C Block)", floor: "cblock-second", roomId: "lh203" },
  { name: "LH-202 (C Block)", floor: "cblock-second", roomId: "lh202" },
  { name: "LH-201 (B.E Lecture Hall)", floor: "cblock-second", roomId: "lh201" },
  { name: "DEPT LIBRARY (C Block Second)", floor: "cblock-second", roomId: "dept_library_2" },
  { name: "Stairs (C Block 2nd L-Side)", floor: "cblock-second", roomId: "stair4" },
  { name: "Stairs (C Block 2nd R-Side)", floor: "cblock-second", roomId: "stair5" },
  { name: "Stairs(C Block 2nd center)", floor: "cblock-first", roomId: "stair6" },


  // 3RD FLOOR (ECE)
  { name: "M.Tech L-307 (C Block)", floor: "cblock-third", roomId: "mtech_l307" },
  { name: "M.Tech L-308 (C Block)", floor: "cblock-third", roomId: "mtech_l308" },
  { name: "L-303 VLSI LAB/MP LAB (C Block)", floor: "cblock-third", roomId: "vlsi_l303" },
  { name: "L-302 HDL LAB/DSP LAB (C Block)", floor: "cblock-third", roomId: "hdl_l302" },
  { name: "L-301 Comm And Adv Comm. Lab (C Block)", floor: "cblock-third", roomId: "comm_l301" },
  { name: "DE / MC Lab (L-307) (C Block)", floor: "cblock-third", roomId: "de_l307" },
  { name: "L-306 AEC Lab (C Block)", floor: "cblock-third", roomId: "aec_l306" },
  { name: "L-305 Project Lab (C Block)", floor: "cblock-third", roomId: "proj_l305" },
  { name: "L-304 PE Lab (C Block)", floor: "cblock-third", roomId: "pe_l304" },
  { name: "LH-306 (C Block)", floor: "cblock-third", roomId: "lh306" },
  { name: "LH-305 (C Block)", floor: "cblock-third", roomId: "lh305" },
  { name: "HOD Office AND FACULTY HALL (C Block Third)", floor: "cblock-third", roomId: "hod_office_hall_3" },
  { name: "LH-304 (C Block)", floor: "cblock-third", roomId: "lh304" },
  { name: "LH-303 (C Block)", floor: "cblock-third", roomId: "lh303" },
  { name: "LH-302 (C Block)", floor: "cblock-third", roomId: "lh302" },
  { name: "LH-301 (C Block)", floor: "cblock-third", roomId: "lh301" },
  { name: "DEPT LIBRARY (C Block Third)", floor: "cblock-third", roomId: "dept_library_3" },
  { name: "STUDENT LOUNGE (C Block Third)", floor: "cblock-third", roomId: "student_lounge_3" },
  { name: "Washroom (C Block 3rd Fl)", floor: "cblock-third", roomId: "rest_rooms_3a" },
  { name: "Stairs (C Block 3rd L-Side)", floor: "cblock-third", roomId: "stair7" },
  { name: "Stairs (C Block 3rd R-Side)", floor: "cblock-third", roomId: "stair8" },
  { name: "Stairs (C Block 3rd center)", floor: "cblock-third", roomId: "stair9" },


  // 4TH FLOOR (Mixed)
  { name: "LH-407a (C Block)", floor: "cblock-fourth", roomId: "lh407a" },
  { name: "LH-407b (C Block)", floor: "cblock-fourth", roomId: "lh407b" },
  { name: "LAB-408 (Microcontroller/CCN Lab)", floor: "cblock-fourth", roomId: "lab408" },
  { name: "LAB-409 (HDL/DSP/Microprocessor)", floor: "cblock-fourth", roomId: "lab409" },
  { name: "LAB-410 (Analog Electronics/Microwave)", floor: "cblock-fourth", roomId: "lab410" },
  { name: "LH-406 (C Block)", floor: "cblock-fourth", roomId: "lh406" },
  { name: "LAB-413 (Analog Comm. & IIC Lab)", floor: "cblock-fourth", roomId: "lab413" },
  { name: "LAB-412b (Project & Research Lab)", floor: "cblock-fourth", roomId: "lab412b" },
  { name: "LAB-412a (AI/Tech Computer Lab)", floor: "cblock-fourth", roomId: "lab412a" },
  { name: "LAB-411 (Logic Design Lab)", floor: "cblock-fourth", roomId: "lab411" },
  { name: "LH-405 (C Block)", floor: "cblock-fourth", roomId: "lh405" },
  { name: "Faculty Hall (C Block Fourth)", floor: "cblock-fourth", roomId: "faculty_hall_4" },
  { name: "LH-404 (C Block)", floor: "cblock-fourth", roomId: "lh404" },
  { name: "LH-403 (C Block)", floor: "cblock-fourth", roomId: "lh403" },
  { name: "LH-402 (C Block)", floor: "cblock-fourth", roomId: "lh402" },
  { name: "LH-401 (C Block)", floor: "cblock-fourth", roomId: "lh401" },
  { name: "DEPT. LIBRARY (C Block Fourth)", floor: "cblock-fourth", roomId: "dept_library_4" },
  { name: "Student Lounge (C Block Fourth)", floor: "cblock-fourth", roomId: "student_lounge_4" },
  { name: "Rest Room (C Block Fourth)", floor: "cblock-fourth", roomId: "rest_room_4" },
  { name: "Faclty Res. Room (C Block Fourth)", floor: "cblock-fourth", roomId: "faculty_rest_room" },
  { name: "Stairs (C Block 4th L-Side)", floor: "cblock-fourth", roomId: "stair11" },
  { name: "Stairs (C Block 4th R-Side)", floor: "cblock-fourth", roomId: "stair10" },
  { name: "Stairs (C Block 4th center)", floor: "cblock-fourth", roomId: "stair12" },


  // 5TH FLOOR (CSE)
  { name: "LH-506 (C Block)", floor: "cblock-fifth", roomId: "lh506" },
  { name: "L503 (AI & Machine Learning Lab)", floor: "cblock-fifth", roomId: "l503" },
  { name: "L502 (Computer Networks Lab)", floor: "cblock-fifth", roomId: "l502" },
  { name: "L501 (Data Structures Lab)", floor: "cblock-fifth", roomId: "l501" },
  { name: "LH-505 (C Block)", floor: "cblock-fifth", roomId: "lh505" },
  { name: "R & D Lab / CoE MI & BD (C Block)", floor: "cblock-fifth", roomId: "r_d_lab" },
  { name: "L506 (Mobile Application Dev. Lab)", floor: "cblock-fifth", roomId: "l506" },
  { name: "CoE Cybersecurity (C Block)", floor: "cblock-fifth", roomId: "coe_cybersecurity" },
  { name: "L504 (Analog & Digital Electronics Lab)", floor: "cblock-fifth", roomId: "l504" },
  { name: "M.TECH CSE LAB (C Block)", floor: "cblock-fifth", roomId: "mtech_cse_lab" },
  { name: "STAFF ROOM (C Block Fifth)", floor: "cblock-fifth", roomId: "staff_room_5" },
  { name: "LH-504 (C Block)", floor: "cblock-fifth", roomId: "lh504" },
  { name: "LH-503 (C Block)", floor: "cblock-fifth", roomId: "lh503" },
  { name: "LH-502 (C Block)", floor: "cblock-fifth", roomId: "lh502" },
  { name: "LH-501 (C Block)", floor: "cblock-fifth", roomId: "lh501" },
  { name: "DEPT LIBRARY (C Block Fifth)", floor: "cblock-fifth", roomId: "dept_library_5" },
  { name: "Washroom (C Block Fifth)", floor: "cblock-fifth", roomId: "washroom_5" },
  { name: "Stairs (C Block 5th L-Side)", floor: "cblock-fifth", roomId: "stair13" },
  { name: "Stairs (C Block 5th R-Side)", floor: "cblock-fifth", roomId: "stair14" },
  { name: "Stairs (C Block 5th center)", floor: "cblock-fifth", roomId: "stair15" },

];

function App() {
  const [location, setLocation] = useState(null);
  const [search, setSearch] = useState("");
  const [filteredResults, setFilteredResults] = useState([]);
  const [showSuggestions, setShowSuggestions] = useState(false);
  const [selectedResult, setSelectedResult] = useState(null);
  const [routeCoordinates, setRouteCoordinates] = useState(null);
  const [fromSearch, setFromSearch] = useState("");
  const [fromFiltered, setFromFiltered] = useState([]);
  const [showFromSuggestions, setShowFromSuggestions] = useState(false);
  const [fromResult, setFromResult] = useState(null);
  const [indoorMode, setIndoorMode] = useState(false);
  const [floor, setFloor] = useState("ground");
  const [indoorRoute, setIndoorRoute] = useState(null);
  const [block, setBlock] = useState("dblock");
  const [isOpen, setIsOpen] = useState(false);


  useEffect(() => {
    const all = [
      ...campusLocations,
      ...buildings.map((b) => ({ ...b })),
      ...allSearchableRooms.map((room) => ({
        id: room.roomId,
        name: room.name,
        type: "indoor-room",
        floor: room.floor,
      })),
    ];
    setFilteredResults(
      all.filter((item) =>
        item.name.toLowerCase().includes(search.toLowerCase())
      )
    );
    // Only allow outdoor locations/buildings for 'from' search
    setFromFiltered(
      [...campusLocations, ...buildings].filter((item) =>
        item.name.toLowerCase().includes(fromSearch.toLowerCase())
      )
    );
  }, [search, fromSearch]);

  useEffect(() => {
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(
        (pos) => {
          setLocation({ latitude: pos.coords.latitude, longitude: pos.coords.longitude });
        },
        () => console.log("Location access denied"),
        { enableHighAccuracy: true, timeout: 10000 }
      );
    }
  }, []);

  const fetchRoute = async (start, end) => {
    const apiKey = "5b3ce3597851110001cf6248fa3069c9549c4cf98954c040e83eecdf";
    const url = `https://api.openrouteservice.org/v2/directions/foot-walking?api_key=${apiKey}&start=${start[1]},${start[0]}&end=${end[1]},${end[0]}`;
    try {
      const res = await fetch(url);
      const data = await res.json();
      const coords = data.features[0].geometry.coordinates.map(([lng, lat]) => [lat, lng]);
      setRouteCoordinates(coords);
    } catch (err) {
      console.error("Route fetch error", err);
      setRouteCoordinates(null);
    }
  };
  const handleNavigate = () => {
    if (!fromResult || !selectedResult) return;

    // Check for predefined routes (Main Gate → Destination)
    if (fromResult.name === "Main Gate") {
      if (selectedResult.name === "Canteen") {
        setRouteCoordinates(predefinedRoutes["main_gate-canteen"]);
        return;
      }
      if (selectedResult.name === "Playground") {
        setRouteCoordinates(predefinedRoutes["main_gate-playground"]);
        return;
      }
      if (selectedResult.name === "Basket Ball Court") {
        setRouteCoordinates(predefinedRoutes["main_gate-basketball"]);
        return;
      }
      if (selectedResult.name === "Volley Ball Court") {
        setRouteCoordinates(predefinedRoutes["main_gate-volleyball"]);
        return;
      }
      if (selectedResult.name === "Hostel") {
        setRouteCoordinates(predefinedRoutes["main_gate-hostel"]);
        return;
      }
      if (selectedResult.name === "A BLOCK") {
        setRouteCoordinates(predefinedRoutes["main_gate-ablock"]);
        return;
      }
      if (selectedResult.name === "B BLOCK") {
        setRouteCoordinates(predefinedRoutes["main_gate-bblock"]);
        return;
      }
      if (selectedResult.name === "C BLOCK") {
        setRouteCoordinates(predefinedRoutes["main_gate-cblock"]);
        return;
      }
      if (selectedResult.name === "D BLOCK") {
        setRouteCoordinates(predefinedRoutes["main_gate-dblock"]);
        return;
      }
    }
    if (fromResult.name === "Basket Ball Court") {
      if (selectedResult.name === "Main Gate") {
        setRouteCoordinates(predefinedRoutes["basketball-main gate"]);
        return;
      }
      if (selectedResult.name === "Canteen") {
        setRouteCoordinates(predefinedRoutes["basketball-canteen"]);
        return;
      }
      if (selectedResult.name === "Playground") {
        setRouteCoordinates(predefinedRoutes["basketball-playground"]);
        return;
      }
      if (selectedResult.name === "Volley Ball Court") {
        setRouteCoordinates(predefinedRoutes["basketball-volleyballcourt"]);
        return;
      }
      if (selectedResult.name === "Hostel") {
        setRouteCoordinates(predefinedRoutes["basketball-hostel"]);
        return;
      }
      if (selectedResult.name === "A BLOCK") {
        setRouteCoordinates(predefinedRoutes["basketball-ablock"]);
        return;
      }
      if (selectedResult.name === "B BLOCK") {
        setRouteCoordinates(predefinedRoutes["basketball-bblock"]);
        return;
      }
      if (selectedResult.name === "C BLOCK") {
        setRouteCoordinates(predefinedRoutes["basketball-cblock"]);
        return;
      }
      if (selectedResult.name === "D BLOCK") {
        setRouteCoordinates(predefinedRoutes["basketball-dblock"]);
        return;
      }
    }
    if (fromResult.name === "Hostel") {
      if (selectedResult.name === "Main Gate") {
        setRouteCoordinates(predefinedRoutes["hostel-main_gate"]);
        return;
      }
      if (selectedResult.name === "Canteen") {
        setRouteCoordinates(predefinedRoutes["hostel-canteen"]);
        return;
      }
      if (selectedResult.name === "Playground") {
        setRouteCoordinates(predefinedRoutes["hostel-playground"]);
        return;
      }
      if (selectedResult.name === "Basket Ball Court") {
        setRouteCoordinates(predefinedRoutes["hostel-basketball"]);
        return;
      }
      if (selectedResult.name === "Volley Ball Court") {
        setRouteCoordinates(predefinedRoutes["hostel-volleyball"]);
        return;
      }
      if (selectedResult.name === "A BLOCK") {
        setRouteCoordinates(predefinedRoutes["hostel-ablock"]);
        return;
      }
      if (selectedResult.name === "B BLOCK") {
        setRouteCoordinates(predefinedRoutes["hostel-bblock"]);
        return;
      }
      if (selectedResult.name === "C BLOCK") {
        setRouteCoordinates(predefinedRoutes["hostel-cblock"]);
        return;
      }
      if (selectedResult.name === "D BLOCK") {
        setRouteCoordinates(predefinedRoutes["hostel-dblock"]);
        return;
      }
    }
    if (fromResult.name === "B BLOCK") {
      if (selectedResult.name === "Main Gate") {
        setRouteCoordinates(predefinedRoutes["bblock-main_gate"]);
        return;
      }
      if (selectedResult.name === "Canteen") {
        setRouteCoordinates(predefinedRoutes["bblock-canteen"]);
        return;
      }
      if (selectedResult.name === "Playground") {
        setRouteCoordinates(predefinedRoutes["bblock-playground"]);
        return;
      }
      if (selectedResult.name === "Basket Ball Court") {
        setRouteCoordinates(predefinedRoutes["bblock-basketball"]);
        return;
      }
      if (selectedResult.name === "Volley Ball Court") {
        setRouteCoordinates(predefinedRoutes["bblock-volleyball"]);
        return;
      }
      if (selectedResult.name === "Hostel") {
        setRouteCoordinates(predefinedRoutes["bblock-hostel"]);
        return;
      }
      if (selectedResult.name === "A BLOCK") {
        setRouteCoordinates(predefinedRoutes["bblock-ablock"]);
        return;
      }
      if (selectedResult.name === "C BLOCK") {
        setRouteCoordinates(predefinedRoutes["bblock-cblock"]);
        return;
      }
      if (selectedResult.name === "D BLOCK") {
        setRouteCoordinates(predefinedRoutes["bblock-dblock"]);
        return;
      }
    }
    if (fromResult.name === "D BLOCK") {
      if (selectedResult.name === "Main Gate") {
        setRouteCoordinates(predefinedRoutes["dblock-main_gate"]);
        return;
      }
      if (selectedResult.name === "Canteen") {
        setRouteCoordinates(predefinedRoutes["dblock-canteen"]);
        return;
      }
      if (selectedResult.name === "Playground") {
        setRouteCoordinates(predefinedRoutes["dblock-playground"]);
        return;
      }
      if (selectedResult.name === "Basket Ball Court") {
        setRouteCoordinates(predefinedRoutes["dblock-basketball"]);
        return;
      }
      if (selectedResult.name === "Volley Ball Court") {
        setRouteCoordinates(predefinedRoutes["dblock-volleyball"]);
        return;
      }
      if (selectedResult.name === "Hostel") {
        setRouteCoordinates(predefinedRoutes["dblock-hostel"]);
        return;
      }
      if (selectedResult.name === "A BLOCK") {
        setRouteCoordinates(predefinedRoutes["dblock-ablock"]);
        return;
      }
      if (selectedResult.name === "B BLOCK") {
        setRouteCoordinates(predefinedRoutes["dblock-bblock"]);
        return;
      }
      if (selectedResult.name === "C BLOCK") {
        setRouteCoordinates(predefinedRoutes["dblock-cblock"]);
        return;
      }
    }
    if (fromResult.name === "A BLOCK") {
      if (selectedResult.name === "Main Gate") {
        setRouteCoordinates(predefinedRoutes["ablock-main_gate"]);
        return;
      }
      if (selectedResult.name === "Canteen") {
        setRouteCoordinates(predefinedRoutes["ablock-canteen"]);
        return;
      }
      if (selectedResult.name === "Playground") {
        setRouteCoordinates(predefinedRoutes["ablock-playground"]);
        return;
      }
      if (selectedResult.name === "Basket Ball Court") {
        setRouteCoordinates(predefinedRoutes["ablock-basketball"]);
        return;
      }
      if (selectedResult.name === "Volley Ball Court") {
        setRouteCoordinates(predefinedRoutes["ablock-volleyball"]);
        return;
      }
      if (selectedResult.name === "Hostel") {
        setRouteCoordinates(predefinedRoutes["ablock-hostel"]);
        return;
      }
      if (selectedResult.name === "B BLOCK") {
        setRouteCoordinates(predefinedRoutes["ablock-bblock"]);
        return;
      }
      if (selectedResult.name === "C BLOCK") {
        setRouteCoordinates(predefinedRoutes["ablock-cblock"]);
        return;
      }
      if (selectedResult.name === "D BLOCK") {
        setRouteCoordinates(predefinedRoutes["ablock-dblock"]);
        return;
      }
    }
    if (fromResult.name === "C BLOCK") {
      if (selectedResult.name === "Main Gate") {
        setRouteCoordinates(predefinedRoutes["cblock-main_gate"]);
        return;
      }
      if (selectedResult.name === "Canteen") {
        setRouteCoordinates(predefinedRoutes["cblock-canteen"]);
        return;
      }
      if (selectedResult.name === "Playground") {
        setRouteCoordinates(predefinedRoutes["cblock-playground"]);
        return;
      }
      if (selectedResult.name === "Basket Ball Court") {
        setRouteCoordinates(predefinedRoutes["cblock-basketball"]);
        return;
      }
      if (selectedResult.name === "Volley Ball Court") {
        setRouteCoordinates(predefinedRoutes["cblock-volleyball"]);
        return;
      }
      if (selectedResult.name === "Hostel") {
        setRouteCoordinates(predefinedRoutes["cblock-hostel"]);
        return;
      }
      if (selectedResult.name === "A BLOCK") {
        setRouteCoordinates(predefinedRoutes["cblock-ablock"]);
        return;
      }
      if (selectedResult.name === "B BLOCK") {
        setRouteCoordinates(predefinedRoutes["cblock-bblock"]);
        return;
      }
      if (selectedResult.name === "D BLOCK") {
        setRouteCoordinates(predefinedRoutes["cblock-dblock"]);
        return;
      }
    }
    if (fromResult.name === "Playground") {
      if (selectedResult.name === "Main Gate") {
        setRouteCoordinates(predefinedRoutes["playground-main_gate"]);
        return;
      }
      if (selectedResult.name === "Canteen") {
        setRouteCoordinates(predefinedRoutes["playground-canteen"]);
        return;
      }
      if (selectedResult.name === "Basket Ball Court") {
        setRouteCoordinates(predefinedRoutes["playground-basketball"]);
        return;
      }
      if (selectedResult.name === "Volley Ball Court") {
        setRouteCoordinates(predefinedRoutes["playground-volleyball"]);
        return;
      }
      if (selectedResult.name === "Hostel") {
        setRouteCoordinates(predefinedRoutes["playground-hostel"]);
        return;
      }
      if (selectedResult.name === "A BLOCK") {
        setRouteCoordinates(predefinedRoutes["playground-ablock"]);
        return;
      }
      if (selectedResult.name === "B BLOCK") {
        setRouteCoordinates(predefinedRoutes["playground-bblock"]);
        return;
      }
      if (selectedResult.name === "C BLOCK") {
        setRouteCoordinates(predefinedRoutes["playground-cblock"]);
        return;
      }
      if (selectedResult.name === "D BLOCK") {
        setRouteCoordinates(predefinedRoutes["playground-dblock"]);
        return;
      }
    }
    if (fromResult.name === "Volley Ball Court") {
      if (selectedResult.name === "Main Gate") {
        setRouteCoordinates(predefinedRoutes["volleyball-main_gate"]);
        return;
      }
      if (selectedResult.name === "Canteen") {
        setRouteCoordinates(predefinedRoutes["volleyball-canteen"]);
        return;
      }
      if (selectedResult.name === "Playground") {
        setRouteCoordinates(predefinedRoutes["volleyball-playground"]);
        return;
      }
      if (selectedResult.name === "Basket Ball Court") {
        setRouteCoordinates(predefinedRoutes["volleyball-basketball"]);
        return;
      }
      if (selectedResult.name === "Hostel") {
        setRouteCoordinates(predefinedRoutes["volleyball-hostel"]);
        return;
      }
      if (selectedResult.name === "A BLOCK") {
        setRouteCoordinates(predefinedRoutes["volleyball-ablock"]);
        return;
      }
      if (selectedResult.name === "B BLOCK") {
        setRouteCoordinates(predefinedRoutes["volleyball-bblock"]);
        return;
      }
      if (selectedResult.name === "C BLOCK") {
        setRouteCoordinates(predefinedRoutes["volleyball-cblock"]);
        return;
      }
      if (selectedResult.name === "D BLOCK") {
        setRouteCoordinates(predefinedRoutes["volleyball-dblock"]);
        return;
      }
    }
    if (fromResult.name === "Canteen") {
      if (selectedResult.name === "Main Gate") {
        setRouteCoordinates(predefinedRoutes["canteen-main_gate"]);
        return;
      }
      if (selectedResult.name === "Playground") {
        setRouteCoordinates(predefinedRoutes["canteen-playground"]);
        return;
      }
      if (selectedResult.name === "Basket Ball Court") {
        setRouteCoordinates(predefinedRoutes["canteen-basketball"]);
        return;
      }
      if (selectedResult.name === "Volley Ball Court") {
        setRouteCoordinates(predefinedRoutes["canteen-volleyball"]);
        return;
      }
      if (selectedResult.name === "Hostel") {
        setRouteCoordinates(predefinedRoutes["canteen-hostel"]);
        return;
      }
      if (selectedResult.name === "A BLOCK") {
        setRouteCoordinates(predefinedRoutes["canteen-ablock"]);
        return;
      }
      if (selectedResult.name === "B BLOCK") {
        setRouteCoordinates(predefinedRoutes["canteen-bblock"]);
        return;
      }
      if (selectedResult.name === "C BLOCK") {
        setRouteCoordinates(predefinedRoutes["canteen-cblock"]);
        return;
      }
      if (selectedResult.name === "D BLOCK") {
        setRouteCoordinates(predefinedRoutes["canteen-dblock"]);
        return;
      }
    }
    // if no predefined, fall back to API route
    if (fromResult.lat && selectedResult.lat) {
      fetchRoute([fromResult.lat, fromResult.lng], [selectedResult.lat, selectedResult.lng]);
    } else if (fromResult.id === "my-location" && selectedResult.lat && location) {
      fetchRoute([location.latitude, location.longitude], [selectedResult.lat, selectedResult.lng]);
    }
  };
  let activeRooms = [];
  if (block === "cblock") {
    if (floor === "ground") { activeRooms = cBlockGroundRooms; }
    else if (floor === "first") { activeRooms = cBlockFirstRooms; }
    else if (floor === "second") { activeRooms = cBlockSecondRooms; }
    else if (floor === "third") { activeRooms = cBlockThirdRooms; }
    else if (floor === "fourth") { activeRooms = cBlockFourthRooms; }
    else if (floor === "fifth") { activeRooms = cBlockFifthRooms; }
  } else if (block === "dblock") {
    if (floor === "ground") { activeRooms = dBlockGroundRooms; }
    else if (floor === "first") { activeRooms = dBlockFirstRooms; }
    else if (floor === "second") { activeRooms = dBlockSecondRooms; }
    else if (floor === "third") { activeRooms = dBlockThirdRooms; }
    else if (floor === "fourth") { activeRooms = dBlockFourthRooms; }
    // D Block does not have a 5th floor in your data, so it stops here.
  }

  return (
    <div className="app-container">
      <h1 className="app-title" style={{ fontSize: "30px", color: "#000000ff" }}>CAMPUS NAVIGATOR</h1>

      {!indoorMode && (
        <div style={{
          display: "flex",
          flexDirection: "column", // stack items vertically
          alignItems: "center",    // center them horizontally
          margin: "0 auto 18px auto",
          maxWidth: 700,
          gap: 8,                 // space between each item
          background: "#f5f7fa",
          borderRadius: 12,
          boxShadow: "0 2px 12px #e3eafc",
          padding: "18px 18px 12px 18px",
          border: "1.5px solid #b0b8d1"
        }}>
          <div style={{ flex: 1, position: "relative", minWidth: 100 }}>
            <label style={{ fontWeight: 600, fontSize: 13, color: "#3949ab", marginBottom: 2, display: "block" }}>From</label>
            <input
              type="text"
              placeholder="Building or location"
              value={fromSearch}
              onClick={() => setShowFromSuggestions(true)}
              onChange={e => {
                setFromSearch(e.target.value);
                setShowFromSuggestions(true);
              }}
              style={{ width: "90%", padding: "10px", fontSize: "1rem", borderRadius: 6, border: "1.5px solid #b0b8d1", marginBottom: 0 }}
            />
            {showFromSuggestions && (
              <div
                style={{
                  position: "absolute",
                  top: "48px",
                  left: 0,
                  width: "100%",
                  background: "#fff",
                  border: "1px solid #ccc",
                  borderRadius: "4px",
                  zIndex: 999,
                  maxHeight: 220,
                  overflowY: "auto"
                }}
              >
                {location && (
                  <div
                    key="my-location"
                    onClick={() => {
                      setFromResult({
                        id: "my-location",
                        name: "My Location",
                        lat: location.latitude,
                        lng: location.longitude,
                        type: "device-location"
                      });
                      setFromSearch("My Location");
                      setShowFromSuggestions(false);
                    }}
                    style={{
                      padding: "8px",
                      cursor: "pointer",
                      borderBottom: "1px solid #eee",
                      background: fromResult && fromResult.id === "my-location" ? "#e3eafc" : undefined,
                      fontWeight: 600,
                      color: "#1976d2"
                    }}
                  >
                    My Location
                  </div>
                )}
                {fromFiltered.length === 0 ? (
                  <div style={{ padding: "8px", color: "#888" }}>No results found</div>
                ) : (
                  fromFiltered.map((item) => (
                    <div
                      key={item.id}
                      onClick={() => {
                        setFromResult(item);
                        setFromSearch(item.name);
                        setShowFromSuggestions(false);
                      }}
                      style={{
                        padding: "8px",
                        cursor: "pointer",
                        borderBottom: "1px solid #eee",
                        background: fromResult && fromResult.id === item.id ? "#e3eafc" : undefined
                      }}
                    >
                      {item.name} <span style={{ color: "#666" }}>({item.type})</span>
                    </div>
                  ))
                )}
              </div>
            )}
          </div>
          <div style={{ flex: 1, position: "relative", minWidth: 180 }}>
            <label style={{ fontWeight: 600, fontSize: 13, color: "#3949ab", marginBottom: 2, display: "block" }}>To</label>
            <input
              type="text"
              placeholder="Building, location, or room"
              value={search}
              onClick={() => setShowSuggestions(true)}
              onChange={e => setSearch(e.target.value)}
              style={{ width: "90%", padding: "10px", fontSize: "1rem", borderRadius: 6, border: "1.5px solid #b0b8d1", marginBottom: 0 }}
            />
            {showSuggestions && (
              <div
                style={{
                  position: "absolute",
                  top: "48px",
                  left: 0,
                  width: "100%",
                  background: "#fff",
                  border: "1px solid #ccc",
                  borderRadius: "4px",
                  zIndex: 999,
                  maxHeight: 220,
                  overflowY: "auto"
                }}
              >
                {filteredResults.length === 0 ? (
                  <div style={{ padding: "8px", color: "#888" }}>No results found</div>
                ) : (
                  filteredResults.map((item) => (
                    <div
                      key={item.id}
                      onClick={() => {
                        setShowSuggestions(false);
                        setSearch(item.name);
                        setSelectedResult(item);
                      }}
                      style={{
                        padding: "8px",
                        cursor: "pointer",
                        borderBottom: "1px solid #eee",
                        background: selectedResult && selectedResult.id === item.id ? "#e3eafc" : undefined
                      }}
                    >
                      {item.name} <span style={{ color: "#666" }}>({item.type})</span>
                    </div>
                  ))
                )}
              </div>
            )}
          </div>
          <button
            style={{
              padding: "12px 20px",
              background: "#1976d2",
              color: "#fff",
              border: "none",
              borderRadius: "10px",
              fontWeight: 700,
              fontSize: "1rem",
              marginLeft: 10,
              minWidth: 245,
              boxShadow: "10px 8px 10px #b0b8d1",
              height: 40
            }}
            disabled={
              !fromResult ||
              !selectedResult ||
              (fromResult && selectedResult && fromResult.id === selectedResult.id) ||
              (fromResult && fromResult.id === 'my-location' ? !location : !fromResult.lat) ||
              !(selectedResult.lat || (selectedResult.type === 'indoor-room'))
            }
            onClick={handleNavigate}
          >
            Navigate
          </button>


        </div>
      )}

      {!indoorMode && (
        <div style={{ marginTop: "10px" }}>
          {selectedResult && ['A BLOCK', 'B BLOCK', 'C BLOCK', 'D BLOCK', 'E BLOCK', 'Canteen'].includes(selectedResult.name) && (
            <button
              style={{
                padding: "10px 20px",
                margin: "10px 0",
                background: "#1976d2",
                color: "#fff",
                border: "none",
                borderRadius: "6px",
              }}
              onClick={() => {
                setIndoorMode(true);
                // Set the correct block and default floor when entering indoor mode
                const targetBlock = selectedResult.id === 'dblock' ? 'dblock' : 'cblock';
                setBlock(targetBlock);
                setFloor(targetBlock === 'dblock' ? 'ground' : 'first');
                setIndoorRoute(null);
              }}
            >
              View Indoor Layout
            </button>
          )}
        </div>
      )}

      {!indoorMode && (
        <div style={{ marginTop: "20px" }}>
          <MapContainer
            center={[12.967640311993218, 77.71392045940188]}
            zoom={18}
            style={{ height: "400px", width: "100%" }}
          >
            <TileLayer
              url="https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"
              attribution="© OpenStreetMap contributors"
            />
            {location && (
              <Marker position={[location.latitude, location.longitude]} icon={currentLocationIcon}>
                <Popup>You are here</Popup>
              </Marker>
            )}
            {fromResult && fromResult.lat && (
              <Marker position={[fromResult.lat, fromResult.lng]} icon={new L.Icon({
                iconUrl: "https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-green.png",
                iconSize: [25, 41],
                iconAnchor: [12, 41],
                popupAnchor: [1, -34],
                shadowUrl: "https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png",
                shadowSize: [41, 41],
              })}>
                <Popup>From: {fromResult.name}</Popup>
              </Marker>
            )}
            {selectedResult && selectedResult.lat && (
              <>
                <PanToLocation position={[selectedResult.lat, selectedResult.lng]} />
                <Marker position={[selectedResult.lat, selectedResult.lng]} icon={destinationIcon}>
                  <Popup>To: {selectedResult.name}</Popup>
                </Marker>
              </>
            )}
            <Polygon positions={cmritBoundary} pathOptions={{ fillColor: "#2196f3", fillOpacity: 0.2, color: "#1976d2", opacity: 0.8, weight: 2 }} />
            {routeCoordinates && <Polyline positions={routeCoordinates} pathOptions={{ color: "blue", weight: 6, opacity: 0.8 }} />}
          </MapContainer>
        </div>
      )}

      {/* Location: Around line 740, inside the {indoorMode} div */}

      {indoorMode && (
        <div style={{ marginTop: "20px" }}>


          {/* BLOCK SELECTION BUTTONS: NEW */}
          <div style={{
            marginBottom: "10px",
            display: "inline-flex", // Use inline-flex to wrap content tightly
            padding: "10px",        // Add padding inside the border box
            border: "2px solid #395168ff", // Blue border for highlighting
            borderRadius: "50px",   // Curved corners for the box
            gap: "10px",            // Space between buttons (optional, but cleaner than marginRight)
            backgroundColor: "#f0f8ff", // Light background color for contrast (optional)
            boxShadow: "0px 4px 12px rgba(25, 118, 210, 0.2)",
            alignment: "center",
          }}>
            <span
              style={{
                fontWeight: "bold",
                color: "#1a237e",
                fontSize: "14px",
                paddingRight: "10px",
                paddingLeft: "10px",
                lineHeight: "100px",
                // Add slight padding to the right of the label before the buttons
              }}
            >
              BLOCKS:-
            </span>
            <button
              onClick={() => {
                setBlock("ablock");
                setFloor("ground"); // Default floor for D Block
                setIndoorRoute(null);
              }}
              style={{
                marginRight: "10px",
                padding: "8px 16px",
                background: block === "ablock" ? "#7391b1ff" : "#ccc",
                color: "#000000ff",
                border: "none",
                borderRadius: "20px",
              }}
            >
              A Block
            </button>
            <button
              onClick={() => {
                setBlock("bblock");
                setFloor("ground"); // Default floor for D Block
                setIndoorRoute(null);
              }}
              style={{
                marginRight: "10px",
                padding: "8px 16px",
                background: block === "bblock" ? "#7391b1ff" : "#ccc",
                color: "#000000ff",
                border: "none",
                borderRadius: "20px",
              }}
            >
              B Block
            </button>
            <button
              onClick={() => {
                setBlock("cblock");
                setFloor("first"); // Default floor for D Block
                setIndoorRoute(null);
              }}
              style={{
                marginRight: "10px",
                padding: "8px 16px",
                background: block === "cblock" ? "#7391b1ff" : "#ccc",
                color: "#000000ff",
                border: "none",
                borderRadius: "20px",
              }}
            >
              C Block
            </button>
            <button
              onClick={() => {
                setBlock("dblock");
                setFloor("ground"); // Default floor for C Block
                setIndoorRoute(null);
              }}
              style={{
                padding: "8px 16px",
                background: block === "dblock" ? "#7391b1ff" : "#ccc",
                color: "#000000ff",
                border: "none",
                borderRadius: "20px",
              }}
            >
              D Block
            </button>
            <button
              onClick={() => {
                setBlock("eblock");
                setFloor("ground"); // Default floor for D Block
                setIndoorRoute(null);
              }}
              style={{
                marginRight: "10px",
                padding: "8px 16px",
                background: block === "eblock" ? "#7391b1ff" : "#ccc",
                color: "#000000ff",
                border: "none",
                borderRadius: "20px",
              }}
            >
              E Block
            </button>
            <button
              onClick={() => {
                setBlock("canteen");
                setFloor("first"); // Default floor for D Block
                setIndoorRoute(null);
              }}
              style={{
                marginRight: "10px",
                padding: "8px 16px",
                background: block === "canteen" ? "#7391b1ff" : "#ccc",
                color: "#000000ff",
                border: "none",
                borderRadius: "20px",
              }}
            >
              Canteen
            </button>
          </div>

          {/* FLOOR SELECTION BUTTONS: CORRECTED LOGIC */}
          <div style={{ marginBottom: "10px" }}>


            <button
              onClick={() => { setFloor("ground"); setIndoorRoute(null); }}
              style={{
                marginRight: "10px",
                padding: "8px 16px",
                background: floor === "ground" ? "#235725ff" : "#ccc",
                color: "#fff",
                border: "none",
                borderRadius: "4px",
              }}
            >
              Ground Floor
            </button>


            {/* 2. First Floor (Both Blocks) */}
            <button
              onClick={() => { setFloor("first"); setIndoorRoute(null); }}
              style={{
                padding: "8px 16px",
                background: floor === "first" ? "#235725ff" : "#ccc",
                color: "#fff",
                border: "none",
                borderRadius: "4px",
                // Use a slightly different margin if D Block's Ground Floor button is hidden
              }}
            >
              First Floor
            </button>

            {/* 3. Second Floor (Both Blocks) */}
            {(block === 'dblock' || block === 'cblock') && (
              <button
                onClick={() => { setFloor("second"); setIndoorRoute(null); }}
                style={{
                  padding: "8px 16px",
                  background: floor === "second" ? "#235725ff" : "#ccc",
                  color: "#fff",
                  border: "none",
                  borderRadius: "4px",
                  marginLeft: "10px"
                }}
              >
                Second Floor
              </button>
            )}

            {/* 4. Third Floor (Both Blocks) */}
            {(block === 'dblock' || block === 'cblock') && (
              <button
                onClick={() => { setFloor("third"); setIndoorRoute(null); }}
                style={{
                  padding: "8px 16px",
                  background: floor === "third" ? "#235725ff" : "#ccc",
                  color: "#fff",
                  border: "none",
                  borderRadius: "4px",
                  marginLeft: "10px"
                }}
              >
                Third Floor
              </button>
            )}

            {/* 5. Fourth Floor (Both Blocks) */}
            {(block === 'dblock' || block === 'cblock') && (
              <button
                onClick={() => { setFloor("fourth"); setIndoorRoute(null); }}
                style={{
                  padding: "8px 16px",
                  background: floor === "fourth" ? "#235725ff" : "#ccc",
                  color: "#fff",
                  border: "none",
                  borderRadius: "4px",
                  marginLeft: "10px"
                }}
              >
                Fourth Floor
              </button>
            )}

            {/* 6. Fifth Floor (C BLOCK ONLY) */}
            {block === 'cblock' && (
              <button
                onClick={() => { setFloor("fifth"); setIndoorRoute(null); }}
                style={{
                  padding: "8px 16px",
                  background: floor === "fifth" ? "#235725ff" : "#ccc",
                  color: "#fff",
                  border: "none",
                  borderRadius: "4px",
                  marginLeft: "10px"
                }}
              >
                Fifth Floor
              </button>
            )}

          </div>

          {/* INDOOR MAP CONTAINER and ROOMS */}
          <div
            style={{
              position: "relative",
              width: "820px",
              height: "420px",
              margin: "24px auto",
              border: "1.5px solid #1a237e",
              background: `
                linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%),
                repeating-linear-gradient(90deg, #e3eafc 0 39px, #c3cfe2 40px 40px),
                repeating-linear-gradient(180deg, #e3eafc 0 39px, #c3cfe2 40px 40px)
              `,
              boxShadow: "0 12px 36px 0 rgba(30, 42, 90, 0.18)",
              borderRadius: "22px",
              overflow: "hidden",
              transition: "box-shadow 0.3s, border 0.3s",
              // ... (Indoor map container styles remain the same) ...
            }}
          >
            {/* Floor Title - UPDATED TO USE 'block' STATE */}
            <div style={{
              position: "absolute",
              top: 10,
              left: 20,
              fontWeight: 700,
              fontSize: 18,
              color: "#003467ff",
              letterSpacing: 1,
              zIndex: 10,
              textShadow: "0 1px 4px #fff"
              // ... (Title styles remain the same) ...
            }}>
              {block === "canteen" ? (<>
                {/* Display Canteen and the selected floor */}
                {"Canteen - "}
                {floor === "ground" ? " Ground Floor" : floor === "first" ? " First Floor" : floor === "second" ? " Second Floor" : floor === "third" ? " Third Floor" : floor === "fourth" ? " Fourth Floor" : " Fifth Floor"}
              </>) : (
                <>
                  {block[0].toUpperCase()} Block -
                  {floor === "ground" ? " Ground Floor" : floor === "first" ? " First Floor" : floor === "second" ? " Second Floor" : floor === "third" ? " Third Floor" : floor === "fourth" ? " Fourth Floor" : " Fifth Floor"}
                </>
              )}
            </div>



            {/* ENTRANCE MARKER - UPDATED LOGIC */}
            {/* D Block Entrance Marker */}
            {block === "dblock" && floor === "ground" && (
              <div
                style={{
                  position: "absolute",
                  left: dBlockEntrance.x,
                  top: dBlockEntrance.y,
                  background: "#1c957fff",
                  color: "#000000ff",
                  padding: "4px 10px",
                  borderRadius: "8px",
                  fontSize: "13px",
                  fontWeight: "bold",
                  boxShadow: "0 2px 8px #bbb",
                  border: "2px solid #0d2a25ff",
                  transform: "translate(-50%,-50%)",
                  zIndex: 5,
                }}
              >
                Entrance
              </div>
            )}
            {/* C Block Entrance Marker */}
            {block === "cblock" && floor === "ground" && (
              <div
                style={{
                  position: "absolute",
                  left: cBlockEntrance.x,
                  top: cBlockEntrance.y,
                  background: "#4caf50",
                  color: "#fff",
                  padding: "4px 10px",
                  borderRadius: "8px",
                  fontSize: "13px",
                  fontWeight: "bold",
                  boxShadow: "0 2px 8px #bbb",
                  border: "2px solid #388e3c",
                  transform: "translate(-50%,-50%)",
                  zIndex: 5,
                }}
              >
                Entrance
              </div>
            )}

            {/* ROOM RENDERING LOGIC REMAINS THE SAME, using the now-correct 'activeRooms' array */}
            {activeRooms.map((room) => {
              let bg = "#90caf9", border = "#1976d2", icon = "";
              if (room.name.toLowerCase().includes("washroom")) {
                bg = "#a5d6a7"; border = "#388e3c"; icon = "🚻";
              } else if (room.name.toLowerCase().includes("🚻")) {
                bg = "#a5d6a7"; border = "#388e3c"; icon = "";
              }
              else if (room.name.toLowerCase().includes("stairs")) {
                bg = "#737373ff"; border = "#3f3f3fff"; icon = "🦿";
              } else if (room.name.toLowerCase().includes("staff")) {
                bg = "#ffe082"; border = "#fbc02d"; icon = "👩‍🏫";
              } else if (room.name.toLowerCase().includes("meeting")) {
                bg = "#c18c5aff"; border = "#a46b42d0"; icon = "👥";
              } else if (room.name.toLowerCase().includes("av hall")) {
                bg = "#c18c5aff"; border = "#a46b42d0"; icon = "🎤";
                // ... (Room rendering logic remains the same) ...
              }
              else if (room.name.toLowerCase().includes("l-")) {
                bg = "#e4d4d4ff"; border = "#cc5a5aff"; icon = "";
              }
              if (indoorRoute && indoorRoute.id === room.id) { bg = "#9a80a9ff";; border = "#ffffffff" }
              return (
                <div
                  key={room.id}
                  title={room.name}
                  style={{
                    position: "absolute",
                    left: room.x,
                    top: room.y,
                    width: room.w,
                    height: room.h,
                    border: `2.5px solid ${border}`,
                    background: `linear-gradient(135deg, ${bg} 60%, #fffde4 100%)`,
                    borderRadius: "16px",
                    boxShadow: "0 6px 24px 0 rgba(33,50,243,0.10), 0 1.5px 6px 0 #b0b8d1",
                    display: "flex",
                    flexDirection: "column",
                    alignItems: "center",
                    justifyContent: "center",
                    fontSize: "11px",
                    fontWeight: 700,
                    cursor: "pointer",
                    transition: "background 0.2s, box-shadow 0.2s, border 0.2s",
                    textAlign: "center",
                    zIndex: 2,
                    outline: indoorRoute && indoorRoute.id === room.id ? "3px solid #4b6669ff" : "none",
                    letterSpacing: 0.5,
                    color: "#1a237e",
                    textShadow: "0 1px 4px #fff, 0 0.5px 1px #b0b8d1"
                  }}
                  onClick={() => setIndoorRoute(room)}
                  onMouseOver={e => {
                    e.currentTarget.style.boxShadow = "0 12px 32px 0 rgba(33,50,243,0.18), 0 2px 8px 0 #b0b8d1";
                    e.currentTarget.style.border = `2.5px solid #3949ab`;
                  }}
                  onMouseOut={e => {
                    e.currentTarget.style.boxShadow = "0 6px 24px 0 rgba(33,50,243,0.10), 0 1.5px 6px 0 #b0b8d1";
                    e.currentTarget.style.border = `2.5px solid ${border}`;
                  }}
                >
                  {icon && <span style={{ fontSize: room.w > 60 ? 32 : 22, marginBottom: 2 }}>{icon}</span>}
                  <span>{room.name}</span>
                </div>
              );
            })}

            {indoorRoute && (
              <svg
                style={{
                  position: "absolute",
                  top: 0,
                  left: 0,
                  width: "100%",
                  height: "100%",
                  pointerEvents: "none",
                  zIndex: 10,
                }}
              >
                <polyline
                  points={indoorRoute.path.map(([x, y]) => `${x},${y}`).join(" ")}
                  fill="none"
                  stroke="#fff"
                  strokeWidth="10"
                  strokeLinecap="round"
                  strokeLinejoin="round"
                />
                <polyline
                  points={indoorRoute.path.map(([x, y]) => `${x},${y}`).join(" ")}
                  fill="none"
                  stroke="#444"
                  strokeWidth="6"
                  strokeDasharray="18,10"
                  strokeLinecap="round"
                  strokeLinejoin="round"
                />
              </svg>
            )}

          </div>

          {/* BACK BUTTON REMAINS THE SAME */}
          <button
            onClick={() => {
              setIndoorMode(false);
              setIndoorRoute(null);
            }}
            style={{
              padding: "10px 20px",
              background: "#1976d2",
              color: "#fff",
              border: "none",
              borderRadius: "6px",

              // ... (Back button styles remain the same) ...
            }}
          >
            Back to Outdoor Map
          </button>
        </div>
      )}

      {/* Floating Chatbot Button + Chat window */}
      <div
        style={{
          position: "fixed",
          bottom: "25px",
          right: "25px",
          zIndex: 9999,
        }}
      >
        {isOpen && (
          <div
            style={{
              position: "absolute",
              bottom: "0px",
              right: "0",
              width: "300px",
              backgroundColor: "#0b0b0b",
              borderRadius: "12px",
              boxShadow: "0 10px 30px rgba(0,0,0,0.3)",
              overflow: "hidden",
              animation: "slideUp 0.18s ease-in-out",
            }}
          >
            <div
              style={{
                display: "flex",
                justifyContent: "space-between",
                alignItems: "center",
                backgroundColor: "#003030",
                color: "#fff",
                padding: "10px 12px",
                fontWeight: "700",
              }}
            >
              🤖 Campus Chatbot
              <X
                size={18}
                style={{ cursor: "pointer" }}
                onClick={() => setIsOpen(false)}
              />
            </div>

            <div style={{ background: "#0b0b0b", padding: "12px" }}>
              <Chatbot
                config={config}
                messageParser={MessageParser}
                actionProvider={ActionProvider}
              />
            </div>
          </div>
        )}

        {/* Floating Button */}
        <button
          onClick={() => setIsOpen((prev) => !prev)}
          style={{
            backgroundColor: "#1976d2",
            border: "none",
            borderRadius: "50%",
            width: "56px",
            height: "56px",
            cursor: "pointer",
            boxShadow: "0 10px 30px rgba(25,118,210,0.24)",
            display: "flex",
            alignItems: "center",
            justifyContent: "center",
            transition: "transform 0.2s ease",
          }}
          aria-label="Toggle chat"
        >
          <MessageCircle
            size={28}
            color="#f4f3f3ff" />
        </button>
      </div>

      {/* Animations & custom styles */}
      <style>
        {`
          @keyframes slideUp {
            from { transform: translateY(12px); opacity: 0; }
            to { transform: translateY(0); opacity: 1; }
          }

          .react-chatbot-kit-chat-container {
            background-color: #0b0b0b !important;
            color: #fff !important;
          }

          .react-chatbot-kit-chat-bot-message {
            background-color: #111 !important;
            color: #fff !important;
            font-weight: 500;
            border: 1px solid rgba(255,255,255,0.04) !important;
          }

          .react-chatbot-kit-user-chat-message {
            background-color: #1976d2 !important;
            color: #fff !important;
            border: 1px solid rgba(255,255,255,0.04) !important;
          }

          .react-chatbot-kit-chat-input {
            background-color: #111 !important;
            color: #fff !important;
            border: 1px solid rgba(255,255,255,0.04) !important;
          }

          select {
            padding: 8px;
            border-radius: 6px;
            border: 1px solid #ccc;
            background: #0b0b0b;
            color: #fff;
          }
        `}
      </style>
    </div>
  );
}

export default App;